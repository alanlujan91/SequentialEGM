{"version":"1","records":[{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method"},"type":"lvl1","url":"/egmn","position":0},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method"},"content":"Heterogeneous agent models with multiple decisions are often solved using inefficient grid search methods that require many evaluations and are slow.\nThis paper provides a novel method for solving such models using an extension of the Endogenous Grid Method (EGM) that uses Gaussian Process Regression (GPR) to interpolate functions on unstructured grids.\nFirst, I propose an intuitive and strategic procedure for decomposing a problem into subproblems which allows the use of efficient solution methods.\nSecond, using an exogenous grid of post-decision states and solving for an endogenous grid of pre-decision states that obey a first-order condition greatly speeds up the solution process.\nThird, since the resulting endogenous grid can often be non-rectangular at best and unstructured at worst, GPR provides an efficient and accurate method for interpolating the value, marginal value, and decision functions.\nApplied sequentially to each decision within the problem, the method is able to solve heterogeneous agent models with multiple decisions in a fraction of the time and with less computational resources than are required by standard methods currently used.\nSoftware to reproduce these methods is available under the \n\nEcon-ARK/HARK project for the python programming language.\n\n\n\nI would like to thank Chris Carroll and Simon Scheidegger for their helpful comments and suggestions. The remaining errors are my own. All figures and other numerical results were produced using the \n\nEcon-ARK/HARK toolkit (\n\nCarroll et al. (2018)). Additional libraries used in the production of this paper include but are not limited to: \n\nscipy (\n\nVirtanen et al. (2020)), \n\nnumpy (\n\nHarris et al. (2020)), \n\nnumba (\n\nLam et al. (2015)), \n\ncupy (\n\nOkuta et al. (2017)), \n\nscikit-learn (\n\nPedregosa et al. (2011)), \n\npytorch (\n\nPaszke et al. (2019)), and \n\ngpytorch (\n\nGardner et al. (2018))\n\n","type":"content","url":"/egmn","position":1},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Introduction"},"type":"lvl2","url":"/egmn#introduction","position":2},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Introduction"},"content":"Introduce the topic by providing a brief overview of the issue and why it is important to study it.Identify the research question: Clearly state the research question or problem being addressed in the current study.\n Provide context: Explain why the topic is important to study and what gap in the existing knowledge the current study aims to fill.\n Summarize the existing literature: Briefly describe what is currently known about the topic, including any relevant studies or theories that have been previously published.\n Highlight the limitations of previous research: Identify any limitations or gaps in the existing literature and explain how the current study will address these limitations.\n Provide a rationale for the study: Explain why the current study is needed and why it is a significant contribution to the existing knowledge on the topic.Use only the first paragraph to state the question and describe its importance. Don't weave\n around, be overly broad, or use prior literature to motivate it (the question is not important\n because so many papers looked at this issue before!).\n\nMacroeconomic modeling aims to describe a complex world of agents interacting with each other and making decisions in a dynamic setting. The models are often very complex, require strong underlying assumptions, and use a lot of computational power to solve. One of the most common methods to solve these complex problems is using a grid search method to solve the model. The Endogenous Grid Method (EGM) developed by \n\nCarroll (2006) allows dynamic optimization problems to be solved in a more computationally efficient and faster manner than the previous method of convex optimization using grid search. Many problems that before took hours to compute became much easier to solve and allowed macroeconomists and computational economists to focus on estimation and simulation.\nHowever, the Endogenous Grid Method is limited to a few specific classes of problems. Recently, the classes of problems to which EGM can be applied have been expanded, but with every new method comes a new set of limitations.\nThis paper introduces a new approach to EGM in a multivariate setting. The method is called Sequential EGM (or EGMn) and introduces a novel way of breaking down complex problems into a sequence of simpler, smaller, and more tractable problems, along with an exploration of new multidimensional interpolation methods that can be used to solve these problems.","type":"content","url":"/egmn#introduction","position":3},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Literature Review","lvl2":"Introduction"},"type":"lvl3","url":"/egmn#literature-review","position":4},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Literature Review","lvl2":"Introduction"},"content":"Summarize the existing literature on the topic and highlight any gaps or limitations in the current research.Then use the second paragraph for a summary of the most relevant literature\n (not a full Section!). Hint: use present tense, to be consistent. \"Smith (1986) presents a similar model, ...\"\n\nCarroll (2006) first introduced the Endogenous Grid Method as a way to speed up the solution of dynamic stochastic consumption-savings problems. The method consists of starting with an exogenous grid of post-decision states and using the inverse of the first-order condition to find the optimal consumption policy that rationalizes such post-decision states. Given the optimal policy and post-decision states, it is straightforward to calculate the initial pre-decision state that leads to the optimal policy. Although this method is certainly innovative, it only applied to a model with one control variable and one state variable. \n\nBarillas & Fernández-Villaverde (2007) further extend this method by including more than one control variable in the form of a labor-leisure choice, as well as a second state variable for stochastic persistence.\n\nHintermaier & Koeniger (2010) introduce a model with collateral constraints and non-separable utility and solve using an EGM method that allows for occasionally binding constraints among endogenous variables. \n\nJørgensen (2013) evaluates the performance of the Endogenous Grid Method against other methods for solving dynamic stochastic optimization problems and finds it to be fast and efficient. \n\nMaliar & Maliar (2013) develop the Envelope Condition Method based on a similar idea as the Endogenous Grid Method, avoiding the need for costly numerical optimization and grid search. However, their model is limited to infinite horizon problems as it is a forward solution method.\n\nFurther development into a multivariate Endogenous Grid Method expanded the ability of researchers to solve models efficiently. \n\nWhite (2015) formally characterized the conditions for the Endogenous Grid Method and developed an interpolation method for structured non-rectilinear, or curvilinear, grids. \n\nIskhakov (2015) additionally establishes conditions for solving multivariate models with EGM, requiring the invertibility of a triangular system of first-order conditions. \n\nLudwig & Schön (2018) also develops a novel interpolating method using Delaunay triangulation of the resulting unstructured endogenous grid. However, the authors show that the gains from avoiding the grid search method are often offset by the costly construction of the triangulation.\n\nFor the papers discussed above, continuity and smoothness of the value and first-order conditions are strict requirements. \n\nFella (2014) first introduced a method to solve non-convex problems using the Endogenous Grid Method. The idea is based on evaluating necessary but not sufficient candidates for the first-order condition in overlapping regions of the state space. \n\nArellano et al. (2016) use the Envelope Condition Method to solve a sovereign default risk model with similar efficiency gains to EGM. \n\nIskhakov et al. (2017) further advances the methodology by using extreme errors to solve discrete choice problems with Endogenous Grid Method. These methods however were only applied to a single control variable and a single state variable. \n\nDruedahl & Jørgensen (2017) introduces the G2EGM to handle non-convex problems with more than 1 control variable and more than 1 state variable. This method is also capable of handling occasionally binding constraints which previous multivariate EGM methods were not.\n\nClausen & Strub (2020) formalize the applicability of the Endogenous Grid Method and its extensions to discrete choice models and discuss the nesting of problems to efficiently find accurate solutions. \n\nDruedahl (2021) similarly suggest the nesting of problems to efficiently use the Endogenous Grid Method within problems with multiple control variables. However, while these nested methods reduce the complexity of solving these models, they often still require grid search methods as is the case with \n\nDruedahl (2021).Finally, this paper contributes to the literature of solving dynamic optimization problems using machine learning tools. {cite:t}`Scheidegger2019` introduce the use of Gaussian Process Regression to compute global solutions for high-dimensional dynamic stochastic problems. {cite:t}`Maliar2021` use non-linear regression and neural networks to estimate systems of equations that characterize dynamic economic models.","type":"content","url":"/egmn#literature-review","position":5},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Research Question","lvl2":"Introduction"},"type":"lvl3","url":"/egmn#research-question","position":6},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Research Question","lvl2":"Introduction"},"content":"Clearly state the research question or problem being addressed in the current study.Next, while still on page one, the third paragraph must begin: \"The purpose of this paper is ...\",\n and summarize what you actually do. (Paragraphs 2 and 3 could be reversed.)\n\nThe purpose of this paper is to describe a new method for solving dynamic optimization problems efficiently and accurately while avoiding convex optimization and grid search methods with the use of the Endogenous Grid Method and first-order conditions. The method is called Sequential EGM (or EGMn) and introduces a novel way of breaking down complex problems into a sequence of simpler, smaller, and more tractable problems, along with an exploration of new multidimensional interpolation methods that can be used to solve these problems. This paper also illustrates an example of how Sequential EGM can be used to solve a dynamic optimization problem in a multivariate setting.","type":"content","url":"/egmn#research-question","position":7},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Methodology","lvl2":"Introduction"},"type":"lvl3","url":"/egmn#methodology","position":8},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Methodology","lvl2":"Introduction"},"content":"Briefly describe the research methodology used in the study, including any data sources, econometric techniques, or other methods used.\n\nThe sequential Endogenous Grid Method consists of 3 major parts: First, the problem to be solved should be broken up into a sequence of smaller problems that themselves don’t add any additional state variables or introduce asynchronous dynamics with respect to the uncertainty. If the problem is broken up in such a way that uncertainty can happen in more than one period, then the solution to this sequence of problems might be different from the aggregate problem due to giving the agent additional information about the future by realizing some uncertainty. Second, I evaluate each of the smaller problems to see if they can be solved using the Endogenous Grid Method. This evaluation is of greater scope than the traditional Endogenous Grid Method, as it allows for the resulting exogenous grid to be non-regular. If the subproblem can not be solved with EGM, then convex optimization is used. Third, if the exogenous grid generated by the EGM is non-regular, then I use a multidimensional interpolation method that takes advantage of machine learning tools to generate an interpolating function. Solving each subproblem in this way, the sequential Endogenous Grid Method is capable of solving complex problems that are not solvable with the traditional Endogenous Grid Method and are difficult and time-consuming to solve with convex optimization and grid search methods.","type":"content","url":"/egmn#methodology","position":9},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Contributions","lvl2":"Introduction"},"type":"lvl3","url":"/egmn#contributions","position":10},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Contributions","lvl2":"Introduction"},"content":"Discuss how the current study contributes to the existing literature and what new insights it provides.That sets you up for the fourth paragraph, which lists \"The contributions of\n this work\" – relative to that prior literature. Clarify what you do that's different\n\nThe Sequential Endogenous Grid Method is capable of solving multivariate dynamic optimization problems in an efficient and fast manner by avoiding grid search. This should allow researchers and practitioners to solve more complex problems that were previously not easily accessible to them, but more accurately capture the dynamics of the macroeconomy. By using advancements in machine learning techniques such as Gaussian Process Regression, the Sequential Endogenous Grid Method is capable of solving problems that were not previously able to be solved using the traditional Endogenous Grid Method. In particular, the Sequential Endogenous Grid Method is different from NEGM in that it allows for using more than one Endogenous Grid Method step to solve a problem, avoiding costly grid search methods to the extent that the problem allows.\n\nAdditionally, the Sequential Endogenous Grid Method often sheds light on the problem by breaking it down into a sequence of simpler problems that were not previously apparent. This is because intermediary steps in the solution process generate value and marginal value functions of different pre- and post-decision states that can be used to understand the problem better.The fifth paragraph then summarizes your results. Tell the answer, so they know what to expect,\n and how to think about each step along the way, what's driving your results.","type":"content","url":"/egmn#contributions","position":11},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Outline","lvl2":"Introduction"},"type":"lvl3","url":"/egmn#outline","position":12},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Outline","lvl2":"Introduction"},"content":"Provide a brief overview of the results and conclusions that will be presented in the article.\n In the sixth and final paragraph, as an aid to the reader, plot the course for the rest of the paper.\n \"The first Section below presents a theoretical model that can be used to generate specific\n hypotheses. Then [Section %s](#method) presents the econometric model, ...\"\n\nSection 2 presents a basic model that illustrates the sequential Endogenous Grid Method in one dimension. Then \n\nSection 3 introduces a more complex method with two state variables to demonstrate the use of machine learning tools to generate an interpolating function. In \n\nSection 4 I present the unstructured interpolation methods using machine learning in more detail. \n\nSection 5 discusses the theoretical requirements to use the Sequential Endogenous Grid Method. Finally, \n\nSection 6 concludes with some limitations and future work.","type":"content","url":"/egmn#outline","position":13},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl2","url":"/egmn#method","position":14},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"The Sequential Endogenous Grid Method"},"content":"","type":"content","url":"/egmn#method","position":15},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"A basic model","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#a-basic-model","position":16},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"A basic model","lvl2":"The Sequential Endogenous Grid Method"},"content":"The baseline problem which I will use to demonstrate the Sequential Endogenous Grid Method (EGMn) is a discrete time version of \n\nBodie et al. (1992) where a consumer has the ability to adjust their labor as well as their consumption in response to financial risk. The objective consists of maximizing the present discounted lifetime utility of consumption and leisure.\\VFunc_0(\\BLev_0, \\tShkEmp_0) = \\max \\Ex_{t} \\left[ \\sum_{n = 0}^{T-t} \\DiscFac^{n} \\utilFunc(\\CLev_{t+n}, \\Leisure_{t+n})  \\right]\n\nIn particular, this example makes use of a utility function that is based on Example 1 in the paper, which is that of additively separable utility of labor and leisure as\\utilFunc(\\CLev, \\Leisure) = \\util(\\CLev) + \\h(\\Leisure) = \\frac{C^{1-\\CRRA}}{1-\\CRRA} + \\labShare^{1-\\CRRA} \\frac{\\Leisure^{1-\\leiShare}}{1-\\leiShare}\n\nwhere the term \\labShare^{1-\\CRRA} is introduced to allow for a balanced growth path as in \n\nMertens & Ravn (2011). The use of additively separable utility is ad-hoc, as it will allow for the use of multiple EGM steps in the solution process, as we’ll see later.\n\nThis model represents a consumer who begins the period with a level of bank balances \\bRat_{t} and a given wage offer \\tShkEmp_{t}. Simultaneously, they are able to choose consumption, labor intensity, and a risky portfolio share with the objective of maximizing their utility of consumption and leisure, as well as their future wealth.\n\nThe problem can be written in normalized recursive form as\\begin{split}\n    \\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{\\{\\cRat_{t},\n      \\leisure_{t}, \\riskyshare_{t}\\}} \\utilFunc(\\cRat_{t}, \\leisure_{t}) +\n    \\DiscFac \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n      \\vFunc_{t+1} (\\bRat_{t+1},\n      \\tShkEmp_{t+1}) \\right] \\\\\n    & \\text{s.t.} \\\\\n    \\labor_{t} & = 1 - \\leisure_{t} \\\\\n    \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t} \\wage \\labor_{t} \\\\\n    \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n    \\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree)\n    \\riskyshare_{t} \\\\\n    \\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}\n  \\end{split}\n\nin which \\labor_{t} is the time supplied to labor net of leisure, \\mRat_{t} is the market resources totaling bank balances and labor income, \\aRat_{t} is the amount of saving assets held by the consumer, and \\riskyshare_{t} is the risky share of assets, which induce a \\Rport_{t+1} return on portfolio that results in next period’s bank balances \\bRat_{t+1} normalized by next period’s permanent income \\PGro_{t+1}.\\begin{equation}\n  \\begin{split}\n   \\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{\\cRat_{t},\n    \\leisure_{t}} \\util(\\cRat_{t}) + \\h(\\leisure_{t}) +\n   \\vEnd_{t} (\\aRat_{t})\n   \\\\\n   & \\text{s.t.} \\\\\n   \\labor_{t} & = 1 - \\leisure_{t} \\\\\n   \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t}\\labor_{t} \\\\\n   \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n  \\end{split}\n \\end{equation}","type":"content","url":"/egmn#a-basic-model","position":17},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Restating the problem sequentially","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#restating-the-problem-sequentially","position":18},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Restating the problem sequentially","lvl2":"The Sequential Endogenous Grid Method"},"content":"We can make a few choices to create a sequential problem which will allow us to use multiple EGM steps in succession. First, the\nagent decides their labor-leisure trade-off and receives a wage. Their wage\nplus their previous bank balance then becomes their market resources. Second, given\nmarket resources, the agent makes a pure consumption-saving decision. Finally, given an amount of savings, the consumer then decides their risky portfolio share.\n\nStarting from the beginning of the period, we can define the labor-leisure problem as\\begin{split}\n    \\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{ \\leisure_{t}}\n    \\h(\\leisure_{t}) + \\vOpt_{t} (\\mRat_{t}) \\\\\n    & \\text{s.t.} \\\\\n    0 & \\leq \\leisure_{t} \\leq 1 \\\\\n    \\labor_{t} & = 1 - \\leisure_{t} \\\\\n    \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t} \\wage \\labor_{t}.\n  \\end{split}\n\nThe pure consumption-saving problem is then\\begin{split}\n    \\vOpt_{t}(\\mRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) + \\DiscFac\\vEnd_{t}(\\aRat_{t}) \\\\\n    & \\text{s.t.} \\\\\n    0 & \\leq \\cRat_{t} \\leq \\mRat_{t} \\\\\n    \\aRat_{t} & = \\mRat_{t} - \\cRat_{t}.\n  \\end{split}\n\nFinally, the risky portfolio problem is\\begin{split}\n    \\vEnd_{t}(\\aRat_{t}) & = \\max_{\\riskyshare_{t}}\n    \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n      \\vFunc_{t+1}(\\bRat_{t+1},\n      \\tShkEmp_{t+1}) \\right] \\\\\n    & \\text{s.t.} \\\\\n    0 & \\leq \\riskyshare_{t} \\leq 1 \\\\\n    \\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree)\n    \\riskyshare_{t} \\\\\n    \\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}.\n  \\end{split}\n\nThis sequential approach is explicitly modeled after the nested approaches explored in \n\nClausen & Strub (2020) and \n\nDruedahl (2021). However, I will offer additional insights that expand on these methods. An important observation is that now, every single choice is self-contained in a subproblem, and although the structure is specifically chosen to minimize the number of state variables at every stage, the problem does not change by this structural imposition. This is because there is no additional information or realization of uncertainty that happens between decisions, as can be seen by the expectation operator being in the last subproblem. From the perspective of the consumer, these decisions are essentially simultaneous, but a careful organization into sub-period problems enables us to solve the model more efficiently and can provide key economic insights. In this problem, as we will see, a key insight will be the ability to explicitly calculate the marginal value of wealth and the Frisch elasticity of labor.\\begin{equation}\n \\begin{split}\n  \\vFunc_{t}(\\bRat_{t}) & = \\max_{ \\labor_{t}} \\h(\\leisure_{t}) + \\Ex_{t} \\left[ \\vOpt_{t} (\\mRat_{t}) \\right] \\\\\n  & \\text{s.t.} \\\\\n  \\labor_{t} & = 1 - \\leisure_{t} \\\\\n  \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t+1}\\labor_{t} \\\\\n \\end{split}\n\\end{equation}\n\n\\begin{equation}\n \\begin{split}\n  \\vOpt_{t}(\\mRat_{t}) & = \\max_{\\aRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1} (\\bRat_{t+1}) \\right] \\\\\n  & \\text{s.t.} \\\\\n  \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n  \\bRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1}\n \\end{split}\n\\end{equation}","type":"content","url":"/egmn#restating-the-problem-sequentially","position":19},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The portfolio decision subproblem","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#the-portfolio-decision-subproblem","position":20},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The portfolio decision subproblem","lvl2":"The Sequential Endogenous Grid Method"},"content":"As useful as it is to be able to use the EGM step more than once, there are clear problems where the EGM step is not applicable. This basic labor-portfolio choice problem demonstrates where we can use an additional EGM step, and where we can not. First, we go over a subproblem where we can not use the EGM step.\n\nIn reorganizing the labor-portfolio problem into subproblems, we assigned the utility of leisure to the leisure-labor subproblem and the utility of consumption to the consumption-savings subproblem. There are no more separable convex utility functions to assign to this problem, and even if we re-organized the problem in a way that moved one of the utility functions into this subproblem, they would not be useful in solving this subproblem via EGM as there is no direct relation between the risky share of portfolio and consumption or leisure. Therefore, the only way to solve this subproblem is through standard convex optimization and root-finding techniques.\n\nRestating the problem in compact form gives\\vEnd_{t}(\\aRat_{t}) = \\max_{\\riskyshare_{t}}  \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n  \\vFunc_{t+1}\\left(\\aRat_{t}(\\Rfree + (\\Risky_{t+1} - \\Rfree) \\riskyshare_{t}), \\tShkEmp_{t+1}\\right)\n  \\right].\n\nThe first-order condition with respect to the risky portfolio share is then\\Ex_{t} \\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}^{\\bRat}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) (\\Risky_{t+1} - \\Rfree)  \\right] = 0.\n\nFinding the optimal risky share requires numerical optimization and root-solving of the first-order condition. To close out the problem, we can calculate the envelope condition as\\vEnd_{t}'(\\aRat_{t}) =  \\Ex_{t} \\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}^{\\bRat}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\Rport_{t+1}  \\right].\n\nA note on avoiding taking expectations more than once We could instead define the portfolio choice subproblem as:\\vEnd_{t}(\\aRat_{t}) = \\max_{\\riskyshare_{t}} \\vOptAlt(\\aRat_{t}, \\riskyshare_{t})\n\nwhere\\begin{split}\n    \\vOptAlt_{t}(\\aRat_{t}, \\riskyshare_{t}) & =  \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right)   \\right] \\\\\n    \\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree) \\riskyshare_{t} \\\\\n    \\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}\n  \\end{split}\n\nIn this case, the process is similar. The only difference is that we don’t have to take expectations more than once. Given the next period’s solution, we can calculate the marginal value functions as:\\begin{split}\n    \\vOptAlt_{t}^{\\aRat}(\\aRat_{t}, \\riskyshare_{t}) & =  \\Ex_{t} \\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}'\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\Rport_{t+1}   \\right] \\\\\n    \\vOptAlt_{t}^{\\riskyshare}(\\aRat_{t}, \\riskyshare_{t}) & =  \\Ex_{t} \\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}'\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\aRat_{t} (\\Risky_{t+1} - \\Rfree)   \\right] \\\\\n  \\end{split}\n\nIf we are clever, we can calculate both of these in one step. Now, the optimal risky share can be found by the first-order condition and we can use it to evaluate the envelope condition.\\text{F.O.C.:} \\qquad \\vOptAlt_{t}^{\\riskyshare}(\\aRat_{t}, \\riskyshare_{t}^{*})  = 0 \\qquad\n  \\text{E.C.:} \\qquad \\vEnd_{t}^{\\aRat}(\\aRat_{t}) = \\vOptAlt_{t}^{\\aRat}(\\aRat_{t}, \\riskyshare_{t}^{*})","type":"content","url":"/egmn#the-portfolio-decision-subproblem","position":21},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The consumption-saving subproblem","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#the-consumption-saving-subproblem","position":22},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The consumption-saving subproblem","lvl2":"The Sequential Endogenous Grid Method"},"content":"The consumption-saving EGM follows \n\nCarroll (2006) but I will cover it for exposition. We can begin the solution process by restating the consumption-savings subproblem in a more compact form, substituting the market resources constraint and ignoring the no-borrowing constraint for now. The problem is:\\vOpt_{t}(\\mRat_{t}) = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) +\n  \\DiscFac \\vEnd_{t}(\\mRat_{t}-\\cRat_{t})\n\nTo solve, we derive the first-order condition with respect to \\cRat_{t} which gives the familiar Euler equation:\\utilFunc'(\\cRat_t) = \\DiscFac \\vEnd_{t}'(\\mRat_{t} - \\cRat_{t}) = \\DiscFac\n  \\vEnd_{t}'(\\aRat_{t})\n\nInverting the above equation is the (first) EGM step.\\cEndFunc_{t}(\\aRat_{t}) = \\utilFunc'^{-1}\\left( \\DiscFac \\vEnd_{t}'(\\aRat_{t})\n  \\right)\n\nGiven the utility function above, the marginal utility of consumption and its inverse are\\utilFunc'(\\cRat) = \\cRat^{-\\CRRA} \\qquad \\utilFunc'^{-1}(\\xRat) =\n  \\xRat^{-1/\\CRRA}.\n\nCarroll (2006) demonstrates that by using an exogenous grid of \\aMat points we can find the unique\n\\cEndFunc_{t}(\\aMat) that optimizes the consumption-saving problem, since the first-order condition is necessary and sufficient.\nFurther, using the market resources constraint, we can recover the exact amount\nof market resources that is consistent with this consumption-saving decision as\\mEndFunc_{t}(\\aMat) = \\cEndFunc_{t}(\\aMat) + \\aMat.\n\nThis \\mEndFunc_{t}(\\aMat) is the “endogenous” grid that is consistent\nwith the exogenous decision grid \\aMat. Now that we have a\n(\\mEndFunc_{t}(\\aMat), \\cEndFunc_{t}(\\aMat)) pair for each\n\\aRat \\in \\aMat, we can construct an interpolating consumption function for\nmarket resources points that are off-the-grid.\n\nThe envelope condition will be useful in the next section, but for completeness\nis defined here.\\vOpt_{t}'(\\mRat_{t}) = \\DiscFac \\vEnd_{t}'(\\aRat_{t}) = \\utilFunc'(\\cRat_{t})","type":"content","url":"/egmn#the-consumption-saving-subproblem","position":23},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The labor-leisure subproblem","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#the-labor-leisure-subproblem","position":24},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The labor-leisure subproblem","lvl2":"The Sequential Endogenous Grid Method"},"content":"The labor-leisure subproblem can  be restated more compactly as:\\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) = \\max_{ \\leisure_{t}}\n  \\h(\\leisure_{t}) + \\vOpt_{t}(\\bRat_{t} +\n  \\tShkEmp_{t} \\wage (1-\\leisure_{t}))\n\nThe first-order condition with respect to leisure implies the labor-leisure Euler equation\\h'(\\leisure_{t}) = \\vOpt_{t}'(\\mRat_{t}) \\tShkEmp_{t}\n\nThe marginal utility of leisure and its inverse are\\h'(\\leisure) = \\labShare\\leisure^{-\\leiShare} \\qquad\n  \\h'^{-1}(\\xRat) = (\\xRat/\\labShare)^{-1/\\leiShare}\n\nUsing an exogenous grid of \\mMat and \\tShkMat, we can find leisure as\\zEndFunc_{t}(\\mMat, \\tShkMat) = \\h'^{-1}\\left(\n  \\vOpt_{t}'(\\mMat) \\tShkMat \\right)\n\nIn this case, it’s important to note that there are conditions for leisure itself. An agent with a small level of market resources \\mRat_{t} might want to work more than their available time endowment, especially at higher levels of income \\tShkEmp_{t}, if the utility of leisure is not enough to compensate for their low wealth. In these situations, the optimal unconstrained leisure might be negative, so we must impose a constraint on the optimal leisure function. This is similar to the treatment of an artificial borrowing constraint in the pure consumption subproblem. From now on, let’s call this constrained optimal function \\hat{\\zEndFunc}_{t}(\\mMat, \\tShkMat), where\\hat{\\zEndFunc}_{t}(\\mMat, \\tShkMat) = \\max \\left[ \\min \\left[ \\zEndFunc_{t}(\\mMat, \\tShkMat), 1 \\right], 0 \\right]\n\nThen, we derive labor as \\lEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}) = 1 -\n  \\hat{\\zEndFunc}_{t}(\\mRat_{t}, \\tShkEmp_{t}). Finally, for each\n\\tShkEmp_{t} and\n\\mRat_{t} as an exogenous grid, we can find the endogenous grid of bank\nbalances as \\bEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}) = \\mRat_{t} -\n  \\tShkEmp_{t}\\lEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}).\n\nThe envelope condition then provides a heterogeneous Frisch elasticity of labor as simply\\vFunc_{t}^{b}(\\bRat_{t}, \\tShkEmp_{t}) = \\vOpt_{t}'(\\mRat_{t}) =\n  \\h'(\\leisure_{t})/\\tShkEmp_{t}.","type":"content","url":"/egmn#the-labor-leisure-subproblem","position":25},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Alternative Parametrization","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#alternative-parametrization","position":26},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Alternative Parametrization","lvl2":"The Sequential Endogenous Grid Method"},"content":"An alternative formulation for the utility of leisure is to state it in terms\nof the disutility of labor as in (references)\\h(\\labor) = - \\leiShare \\frac{\\labor^{1+\\labShare}}{1+\\labShare}\n\nIn this case, we can restate the problem as\\h(\\leisure) = - \\leiShare\n  \\frac{(1-\\leisure)^{1+\\labShare}}{1+\\labShare}\n\nThe marginal utility of leisure and its inverse are\\h'(\\leisure) = \\leiShare(1-\\leisure)^{\\labShare} \\qquad\n  \\h'^{-1}(\\xRat) = 1 - (\\xRat/\\leiShare)^{1/\\labShare}","type":"content","url":"/egmn#alternative-parametrization","position":27},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Curvilinear Grids","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#curvilinear-grids","position":28},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Curvilinear Grids","lvl2":"The Sequential Endogenous Grid Method"},"content":"Although EGMn seems to be a simple approach, there is one important caveat that we have not discussed, which is the details of the interpolation. In the pure consumption-savings problem, a one-dimensional exogenous grid of post-decision liquid assets \\aMat results in a one-dimensional endogenous grid of total market resources \\mMat. However, as we know from standard EGM, the spacing in the \\mMat grid is different from the spacing in the \\aMat grid as the inverted Euler equation is non-linear. This is no problem in a one-dimensional problem as we can simply use non-uniform linear interpolation.\n\nHowever, the same is true of higher dimensional problems, where the exogenous grid gets mapped to a warped endogenous grid. In this case, it is not possible to use standard multi-linear interpolation, as the resulting endogenous grid is not rectilinear. Instead, I introduce a novel approach to interpolation that I call Warped Grid Interpolation (WGI), which is similar to \n\nWhite (2015)’s approach but computationally more efficient and robust.\n\n\n\nFigure 1:Warped Curvlinear Grid that results from multivariate EGM. This grid can be interpolated by WGI.","type":"content","url":"/egmn#curvilinear-grids","position":29},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Warped Grid Interpolation (WGI)","lvl2":"The Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#warped-grid-interpolation-wgi","position":30},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Warped Grid Interpolation (WGI)","lvl2":"The Sequential Endogenous Grid Method"},"content":"Assume we have a set of points indexed by (i,j) in two-dimensional space for which we have corresponding functional values in a third dimension, such that f(x_{ij},y_{ij}) = z_{ij}. In practice, we are interested in cases where the z_{ij} are difficult to compute and f(x_{ij},y_{ij}) is unknown, so we are unable to compute them at other values of x and y --- which is why we want to interpolate. These (x_{ij},y_{ij}) points however are not evenly spaced and do not form a rectilinear grid which would make it easy to interpolate the function off the grid. Nevertheless, these points do have a regular structure as we will see.\n\n\n\nFigure 2:True function and curvilinear grid of points for which we know the value of the function.\n\nIn \n\nFigure 2, we can see the true function in three-dimensional space, along with the points for which we actually know the value of the function. The underlying regular structure comes from the points’ position in the matrix, the (i,j) coordinates. If we join the points along every row and every column, we can see that the resulting grid is regular and piecewise affine (curvilinear).\n\nIn \n\nFigure 3 we see the values of the function at their index coordinate points in the matrix. We can see that there exists a mapping between the curvilinear grid and the index coordinates of the matrix.\n\n\n\nFigure 3:Homotopy between the curvilinear grid and the index coordinates of the matrix.\n\nThe objective is to be able to interpolate the value of the function at any point off the grid, where presumably we are only interested in points internal to the curvilinear space and not outside the boundaries. For example, we can imagine that we want an approximation to the function at the point (x,y) = (3, 5) pictured \n\nFigure 4. If we could find the corresponding point in the coordinate grid, interpolation would be straightforward. We can find where the x-coordinate of the point of interest intersects with the index-coordinates of the matrix. This is similar to assuming that we have 3 linear interpolators formed by connecting the points on the green lines in the x-direction, and for each interpolator we can approximate the corresponding y and z values using the grid data. Now, for each circle in \n\nFigure 4, we have a corresponding pair (y,z), and we can interpolate in the y-direction to find the corresponding z-value for the point’s y-coordinate.\n\n\n\nFigure 4:The method consist of extending the loci of points in the x dimension to find the corresponding crossing points in the y dimension.","type":"content","url":"/egmn#warped-grid-interpolation-wgi","position":31},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl2","url":"/egmn#multdim","position":32},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"The EGMn in Higher Dimensions"},"content":"The problem in \n\nSection 2 demonstrates the simplicity of solving problems sequentially. However, as constructed, the problem has only one state variable and one post-decision state variable per stage. Can EGMn be used to solve higher dimensional problems? In short, yes, but it requires additional thought on interpolation.","type":"content","url":"/egmn#multdim","position":33},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"A more complex problem","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl3","url":"/egmn#a-more-complex-problem","position":34},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"A more complex problem","lvl2":"The EGMn in Higher Dimensions"},"content":"For a demonstration, we now turn to the problem of a worker saving up for retirement. This worker must consume, save, and deposit resources into a tax-advantaged account that can not be liquidated until retirement. In the recursive problem, the worker begins a new period with a liquid account of market resources \\mRat_{t} and an illiquid account of retirement savings \\nRat_{t}. The worker maximizes their utility by choosing consumption \\cRat_{t} and pension deposit \\dRat_{t}. The pension deposit is set aside on a retirement account that is exposed to a risky return, while their post-consumption liquid assets accrue risk-free interest every period. The worker additionally receives an income that faces a permanent (\\PGro_{t+1}) and a transitory (\\tShkEmp_{t+1}) shock every period. At the age of 65, the worker is retired and their assets are liquidated, at which point the state reduces to one liquid account of market resources. The worker’s recursive problem is:\\begin{split}\n    \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) & = \\max_{\\cRat_{t}, \\dRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n    & \\text{s.t.} \\quad \\cRat_{t} \\ge 0, \\quad \\dRat_{t} \\ge 0 \\\\\n    \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n    \\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + g(\\dRat_{t}) \\\\\n    \\mRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1}  + \\tShkEmp_{t+1} \\\\\n    \\nRat_{t+1} & = \\bRat_{t} \\Risky_{t+1}  / \\PGro_{t+1}\n  \\end{split}\n\nwhere\\gFunc(\\dRat) = \\xFer \\log(1+\\dRat).\n\nThis problem can subsequently be broken down into 3 stages: a pension deposit stage, a consumption stage, and an income shock stage.","type":"content","url":"/egmn#a-more-complex-problem","position":35},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Breaking down the problem","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl3","url":"/egmn#breaking-down-the-problem","position":36},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Breaking down the problem","lvl2":"The EGMn in Higher Dimensions"},"content":"In the deposit stage, the worker begins with market resources and a retirement savings account. The worker must maximize their value of liquid wealth \\lRat_{t} and retirement balance \\bRat_{t} by choosing a pension deposit \\dRat_{t}, which must be positive. The retirement balance \\bRat is the cash value of their retirement account plus their pension deposit and an additional amount g(\\dRat_{t}) that provides an incentive to save for retirement. As we’ll see, this additional term will allow us to use the Endogenous Grid Method to solve this subproblem.\\begin{split}\n    \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) & = \\max_{\\dRat_{t}} \\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) \\\\\n    & \\text{s.t.}  \\quad \\dRat_{t} \\ge 0 \\\\\n    \\lRat_{t} & = \\mRat_{t} - \\dRat_{t} \\\\\n    \\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + g(\\dRat_{t})\n  \\end{split}\n\nAfter making their pension decision, the worker begins their consumption stage with liquid wealth \\lRat_{t} and retirement balance \\bRat_{t}. From their liquid wealth, the worker must choose a level of consumption to maximize utility and continuation value \\wFunc_{t}. After consumption, the worker is left with post-decision states that represent liquid assets \\aRat_{t} and retirement balance \\bRat_{t}, which passes through this problem unaffected because it can’t be liquidated until retirement.\\begin{split}\n    \\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\wFunc_{t}(\\aRat_{t}, \\bRat_{t})  \\\\\n    & \\text{s.t.} \\quad \\cRat_{t} \\ge 0 \\\\\n    \\aRat_{t} & = \\lRat_{t} - \\cRat_{t}\n  \\end{split}\n\nFinally, the post-decision value function \\wFunc_{t} represents the value of both liquid and illiquid account balances before the realization of uncertainty regarding the risky return and income shocks. Since we are dealing with a normalized problem, this stage handles the normalization of state variables and value functions into the next period.\\begin{split}\n    \\wFunc_{t}(\\aRat_{t}, \\bRat_{t}) & = \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}(\\mRat_{t+1}, \\mRat_{t+1}) \\right] \\\\\n    & \\text{s.t.} \\quad \\aRat_{t} \\ge 0, \\quad \\bRat_{t} \\ge 0 \\\\\n    \\mRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1}  + \\tShkEmp_{t+1} \\\\\n    \\nRat_{t+1} & = \\bRat_{t} \\Risky_{t+1} /  \\PGro_{t+1}\n  \\end{split}\n\nThe advantage of conceptualizing this subproblem as a separate stage is that we can construct a function \\wFunc_{t} and use it in the prior optimization problems without having to worry about stochastic optimization and taking expectations repeatedly.","type":"content","url":"/egmn#breaking-down-the-problem","position":37},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The consumption-saving problem","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl3","url":"/egmn#the-consumption-saving-problem","position":38},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The consumption-saving problem","lvl2":"The EGMn in Higher Dimensions"},"content":"As seen in the consumption stage above, the retirement balance \\bRat_{t} passes through the problem unaffected because it can’t be liquidated until retirement. In this sense, it is already a post-decision state variable. To solve this problem, we can use a fixed grid of \\bRat_{t} and for each obtain endogenous consumption and ex-ante market resources using the simple Endogenous Grid Method for the consumption problem.","type":"content","url":"/egmn#the-consumption-saving-problem","position":39},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The pension deposit problem","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl3","url":"/egmn#the-pension-deposit-problem","position":40},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The pension deposit problem","lvl2":"The EGMn in Higher Dimensions"},"content":"In the deposit stage, both the state variables and post-decision variables are different since both are affected by the pension deposit decision.\n\nFirst, we can rewrite the pension deposit problem more compactly:\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) = \\max_{\\dRat_{t}}\n  \\vOpt_{t}(\\mRat_{t} - \\dRat_{t}, \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}))\n\nThe first-order condition is\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t})(-1) +\n  \\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})(1+\\gFunc'(\\dRat_{t})) = 0.\n\nRearranging this equation gives\\gFunc'(\\dRat_{t}) = \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n    \\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})} - 1\n\nwhere\\gFunc'(\\dRat) =\n  \\frac{\\xFer}{1+\\dRat} \\qquad \\gFunc'^{-1}(y) = \\xFer/y - 1\n\nGiven that \\gFunc'(\\dRat) exists and is invertible, we can find\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\gFunc'^{-1}\\left(\n  \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n    \\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t},\n    \\bRat_{t})} - 1 \\right)\n\nUsing this, we can back out \\nRat_{t} as\\nEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\bRat_{t} -\n  \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) - \\gFunc(\\dEndFunc_{t}(\\lRat_{t},\n    \\bRat_{t}))\n\nand \\mRat_{t} as\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\lRat_{t} +\n  \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\n\nIn sum, given an exogenous grid (\\lRat_{t}, \\bRat_{t}) we obtain the triple\n\\left(\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}), \\nEndFunc_{t}(\\lRat_{t},\n    \\bRat_{t}), \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\\right), which\nwe can use to\ncreate an interpolator for the decision rule \\dRat_{t}.\n\nTo close the solution method, the envelope conditions are\\begin{split}\n    \\vFunc_{t}^{\\mRat}(\\mRat_{t}, \\nRat_{t}) & =\n    \\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) \\\\\n    \\vFunc_{t}^{\\nRat}(\\mRat_{t}, \\nRat_{t}) & =\n    \\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})\n  \\end{split}","type":"content","url":"/egmn#the-pension-deposit-problem","position":41},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Unstructured Grid Interpolation","lvl2":"The EGMn in Higher Dimensions"},"type":"lvl3","url":"/egmn#unstructured-grid-interpolation","position":42},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Unstructured Grid Interpolation","lvl2":"The EGMn in Higher Dimensions"},"content":"\n\nFigure 5:A regular, rectilinear exogenous grid of pension balances after deposit \\bRat_{t} and liquid assets after consumption \\lRat_{t}.\n\nAs in \n\nSection 2, the resulting endogenous grid is not rectilinear, and in this more complex problem it is not even a regular grid. We can see in  \n\nFigure 5 that starting from a regular and rectilinear exogenous grid of liquid assets post-consumption \\lRat_{t} and pension balances post-deposit \\bRat_{t}, we obtain \n\nFigure 6 which shows an irregular and unstructured endogenous grid of market resources \\mRat_{t} and pension balances pre-deposit \\nRat_{t}.\n\n\n\nFigure 6:An irregular, unstructured endogenous grid of market resources \\mRat_{t} and pension balances before deposit \\nRat_{t}.\n\nTo interpolate a function defined on an unstructured grid, we use Gaussian Process Regression as in \n\nScheidegger & Bilionis (2019).","type":"content","url":"/egmn#unstructured-grid-interpolation","position":43},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Multivariate Interpolation on Unstructured Grids"},"type":"lvl2","url":"/egmn#multinterp","position":44},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Multivariate Interpolation on Unstructured Grids"},"content":"This section presents an alternative interpolation method for unstructured grids. I present a machine learning approach to interpolation on unstructured grids based on Gaussian Process Regression as presented in \n\nScheidegger & Bilionis (2019).","type":"content","url":"/egmn#multinterp","position":45},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Unstructured Grids","lvl2":"Multivariate Interpolation on Unstructured Grids"},"type":"lvl3","url":"/egmn#unstructured-grids","position":46},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Unstructured Grids","lvl2":"Multivariate Interpolation on Unstructured Grids"},"content":"Unstructured interpolation arises in many dynamic programming applications when using the Endogenous Grid Method because the first-order conditions might be highly non-linear and non-monotonic, or because boundary constraints induce kinks in the policy and value functions. In these cases, the grid points generated by the EGM step are not evenly spaced, leading to the need for curvilinear interpolation. We saw in the previous subsection an approach to curvilinear interpolation based on \n\nWhite (2015) that is incapable of interpolation on structured grids. A similar approach was presented in \n\nLudwig & Schön (2018) which used Delaunay interpolation. However, this approach is not well suited for our purposes because triangulation can be computationally intensive and slow, often offsetting the efficiency gains from the Endogenous Grid Method.\n\nAs an alternative to these methods, I introduce the use of Gaussian Process Regression (GPR) along with the Endogenous Grid Method. GPR is computationally efficient, and tools exist to easily parallelize and take advantage of hardware such as Graphics Processing Units (GPU).note: spell out GPU maybe or explain it in some way?","type":"content","url":"/egmn#unstructured-grids","position":47},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Gaussian Process Regression","lvl2":"Multivariate Interpolation on Unstructured Grids"},"type":"lvl3","url":"/egmn#gaussian-process-regression","position":48},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Gaussian Process Regression","lvl2":"Multivariate Interpolation on Unstructured Grids"},"content":"A Gaussian Process is an infinite dimensional random process for which every subset of random variables is jointly Gaussian or has a multivariate normal distribution.\\begin{gathered}\n    \\mathbf{X} \\sim \\mathcal{N}(\\mathbf{\\mu}, \\mathbf{\\Sigma}) \\quad \\text{s.t.} \\quad x_i \\sim \\mathcal{N}(\\mu_i, \\sigma_{ii}) \\\\\n    \\text{and} \\quad  \\sigma_{ij} = \\Ex[(x_i - \\mu_i)(x_j - \\mu_j)] \\quad \\forall i,j \\in \\{1, \\ldots, n\\}.\n  \\end{gathered}\n\nwhere\\mathbf{X} = \\begin{bmatrix}\n    x_1    \\\\\n    x_2    \\\\\n    \\vdots \\\\\n    x_n\n  \\end{bmatrix}\n  \\quad\n  \\mathbf{\\mu} = \\begin{bmatrix}\n    \\mu_1  \\\\\n    \\mu_2  \\\\\n    \\vdots \\\\\n    \\mu_n\n  \\end{bmatrix}\n  \\quad\n  \\mathbf{\\Sigma} = \\begin{bmatrix}\n    \\sigma_{11} & \\sigma_{12} & \\cdots & \\sigma_{1n} \\\\\n    \\sigma_{21} & \\sigma_{22} & \\cdots & \\sigma_{2n} \\\\\n    \\vdots      & \\vdots      & \\ddots & \\vdots      \\\\\n    \\sigma_{n1} & \\sigma_{n2} & \\cdots & \\sigma_{nn}\n  \\end{bmatrix}.\n\nBeing infinitely dimensional, a Gaussian Process can be used to represent a probability distribution over the space of functions in n dimensions. Thus, a Gaussian Process Regression is used to find the best fit function to a set of data points.\\mathbb{P}(\\mathbf{f} | \\mathbf{X}) = \\mathcal{N}(\\mathbf{f} | \\mathbf{m}, \\mathbf{K})\n\nwhere \\mathbf{f} is the vector of function values at the points \\mathbf{X}, \\mathbf{m} is the mean of the function, and \\mathbf{K} is a kernel function that describes the covariance between the function values at different points.\n\nA standard kernel function is the squared exponential kernel, or the radial basis function kernel, which is defined ask(\\mathbf{x}_i, \\mathbf{x}_j) = \\sigma^2_f \\exp\\left(-\\frac{1}{2l^2} (\\mathbf{x}_i - \\mathbf{x}_j)' (\\mathbf{x}_i - \\mathbf{x}_j)\\right).\n\nUsing GPR to interpolate a function f, we can both predict the value of the function at a point \\mathbf{x}_* and the uncertainty in the prediction, which provides useful information as to the accuracy of the approximation.","type":"content","url":"/egmn#gaussian-process-regression","position":49},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"An example of the GPR","lvl2":"Multivariate Interpolation on Unstructured Grids"},"type":"lvl3","url":"/egmn#an-example-of-the-gpr","position":50},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"An example of the GPR","lvl2":"Multivariate Interpolation on Unstructured Grids"},"content":"In \n\nFigure 7, we see the function we are trying to approximate along with a sample of data points for which we know the value of the function. In practice, the value of the function is unknown and/or expensive to compute, so we must use a limited amount of data to approximate it.\n\n\n\nFigure 7:The true function that we are trying to approximate and a sample of data points.\n\nAs we discussed, a Gaussian Process is an infinite dimensional random process which can be used to represent a probability of distributions over the space of functions. In \n\nFigure 8, we see a random sample of functions from the GPR posterior, which is a Gaussian Process conditioned on fitting the data. From this small sample of functions, we can see that the GP generates functions that fit the data well, and the goal of GPR is to find the one function that best fits the data given some hyperparameters by minimizing the negative log-likelihood of the data.\n\n\n\nFigure 8:A random sample of functions from the GPR posterior that fit the data. The goal of GPR is to find the function that best fits the data.\n\nIn \n\nFigure 9, we see the result of GPR with a particular parametrization of the kernel function. The dotted line shows the true function, while the blue dots show the known data points. GPR provides the mean function which best fits the data, represented in the figure as an orange line. The shaded region represents a 95% confidence interval, which is the uncertainty of the predicted function. Along with finding the best fit of the function, GPR provides the uncertainty of the prediction, which is useful information as to the accuracy of the approximation.\n\n\n\nFigure 9:GPR finds the function that best fits the data given some hyperparameters. GPR then optimizes over the parameter space to find the function that minimizes the negative log-likelihood of the data.","type":"content","url":"/egmn#an-example-of-the-gpr","position":51},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl2","url":"/egmn#conditions","position":52},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"","type":"content","url":"/egmn#conditions","position":53},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#splitting-the-problem-into-subproblems","position":54},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"The first step in using the Sequential Endogenous Grid Method is to split the problem into subproblems. This process of splitting up the problem has to be strategic to not insert additional complexity into the original problem. If one is not careful when doing this, the subproblems can become more complex and intractable than the original problem.Comment: Need to decide if it is subproblem or subproblem # DONE\n\nTo split up the problem, we first count the number of control variables or decisions faced by the agent. Ideally, if the agent has n control variables, then the problem should be split into n subproblems, each handling a different control variable. For counting the number of control variables, it is important to not double count variables which are equivalent and have market clearing conditions. For example, the decision of how much to consume and how much to save may seem like two different choices, but because of the market clearing condition \\cRat + \\aRat = \\mRat they are resolved simultaneously and count as only one decision variable. Similarly, the\nchoice between labor and leisure are simultaneous and count as only one decision.\n\nHaving counted our control variables, we look for differentiable and invertible utility functions which are separable in the dynamic programming problem, such as in \n\nSection 2 of the paper, or differentiable and invertible functions in the transition, as in \n\nSection 3 of the paper.note: Capitalize Section for all instances # DONE","type":"content","url":"/egmn#splitting-the-problem-into-subproblems","position":55},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Separable utility functions","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl4","url":"/egmn#separable-utility-functions","position":56},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Separable utility functions","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"In \n\nSection 2, we have additively separable utility of consumption and leisure, which allows for each of these control variables to be handled by separate subproblems. So, it makes sense to split the utility between subproblems and attach one to the consumption subproblem and one to the leisure subproblem.\n\nAs mentioned in that section, however, there are only two separable utility functions in the problem which have been assigned to two subproblems already. This leaves one control variable without a separable utility function. In that case, there is not another Endogenous Grid Method step to exploit, and this subproblem has to be handled by standard convex optimization techniques such as maximization of the value function (VFI) or finding the root of the Euler equation (PFI).note: spell out small numbers except for when talking about a [Section %s](#multdim) etc\n\nNow that we have split the problem into conceptual subproblems, it is important to sequence them in such a way that they don’t become more complex than the original problem. The key here is to avoid adding unnecessary state variables. For example, in the consumption-leisure-portfolio problem, if we were to choose consumption first, we would have to track the wage rate into the following leisure subproblem. This would mean that our consumption problem would be two-dimensional as well as our labor decision problem. As presented, the choice of order in \n\nSection 2 ensures that the consumption problem is one-dimensional, as we can shed the information about the wage rate offer after the agent has made their labor-leisure decision. If we did this the other way, the problem would be more complex and require additional computational resources.\n\nThe consumption subproblem would be two-dimensional instead of one-dimensional, adding more complexity,\\begin{split}\n        \\vFunc(\\bRat, \\tShkEmp) & = \\max_{\\cRat} \\uFunc(\\cRat) + \\vOpt(\\bRat', \\tShkEmp) \\\\\n        & \\text{s.t.}\\\\\n        \\bRat' & = \\bRat - \\cRat \\ge - \\tShkEmp\n    \\end{split}\n\nwhile the labor-leisure subproblem would have an additional constraint\\begin{split}\n        \\vOpt(\\bRat', \\tShkEmp) & = \\max_{\\leisure} \\h(\\leisure) + \\vEnd(\\aRat) \\\\\n        & \\text{s.t.} \\\\\n        0 & \\le \\leisure \\le 1 \\\\\n        \\aRat & = \\bRat' + \\tShkEmp(1 - \\leisure) \\ge 0.\n    \\end{split}\n\nTherefore, strategic ordering of subproblems can greatly simplify the solution process and reduce computational the burden.","type":"content","url":"/egmn#separable-utility-functions","position":57},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Differentiable and invertible transition","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl4","url":"/egmn#differentiable-and-invertible-transition","position":58},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Differentiable and invertible transition","lvl3":"Splitting the problem into subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"In \n\nSection 3, we see that a problem with a differentiable and invertible transition can also be used to embed an additional Endogenous Grid Method step. Because the transition applies independently to a state variable that is not related to the other control variable, consumption, it can be handled separately from the consumption subproblem.note to check the tense of the entire text\n\nIn this particular problem, however, it turns out to make no difference how we order the two subproblems. This is because the control variables, consumption and pension deposit, each affect a separate resource account, namely market resources and pension balance. Because of this, the two subproblems are independent of each other and can be solved in any order.\n\nA good rule of thumb is that when splitting up a problem into subproblems, we should try to reduce the information set that is passed onto the next subproblem. In \n\nSection 2, choosing leisure-labor and realizing total market resources before consumption allows us to shed the wage rate offer state variable before the consumption problem, and we know that for the portfolio choice we only need to know liquid assets after expenditures (consumption). Thus, the order makes intuitive sense; agent first chooses leisure-labor, realizing total market resources, then chooses consumption and savings, and finally chooses their risky portfolio choice. In \n\nSection 3, there are two expenditures that are independent of each other, consumption and deposit, and making one decision or the other first does not reduce the information set for the agent, thus the order of these subproblems does not matter.","type":"content","url":"/egmn#differentiable-and-invertible-transition","position":59},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl3","url":"/egmn#the-endogenous-grid-method-for-subproblems","position":60},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"Once we have strategically split the problem into subproblems, we can use the Endogenous Grid Method in each applicable subproblem while iterating backwards from the terminal period. As we discussed in Sections \n\nSection 2 and \n\nSection 3, the EGM step can be applied when there is a separable, differentiable and invertible utility function in the subproblem or when there is a differentiable and invertible transition in the subproblem. We will discuss each of these cases in turn.","type":"content","url":"/egmn#the-endogenous-grid-method-for-subproblems","position":61},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Utility function","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl4","url":"/egmn#utility-function","position":62},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Utility function","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"A generic subproblem with a differentiable and invertible utility function can be characterized as follows:\\begin{split}\n        \\VFunc(\\xRat) &  = \\max_{\\yRat  \\in \\PGro(\\xRat)} \\UFunc(\\xRat, \\yRat) + \\DiscFac \\WFunc(\\aRat) \\\\\n        & \\text{s.t.} \\\\\n        \\aRat & = \\TFunc(\\xRat,\\yRat)\n    \\end{split}\n\nwhere \\xRat \\in \\XLev is a particular point in the state space, \\yRat \\in \\PGro(\\xRat) is a single control variable in the feasible set \\PGro(\\xRat), \\aRat is the post-decision state, \\VFunc is the value function of \\xRat, \\UFunc is the utility function which may depend on the state and control variables, \\WFunc is the continuation value function which depends on the post-decision state, and \\TFunc is the transition function which maps the state and control variables to the post-decision state.\n\nIf the problem is concave, then the first order condition is necessary and sufficient for optimality. The first order condition is\\UFunc'_{\\yRat}(\\xRat, \\yRat) + \\DiscFac \\WFunc'(\\aRat)\\TFunc'_{\\yRat}(\\xRat,\\yRat) = 0\n\nwhere \\UFunc'_{\\yRat} is the derivative of \\UFunc with respect to \\yRat, \\TFunc'_{\\yRat} is the derivative of \\TFunc with respect to \\yRat, and \\WFunc' is the derivative of \\WFunc with respect to \\aRat.\n\nIf, as we assumed, the utility function is differentiable and invertible, then the Endogenous Grid Method consists of\\yRat = \\left(\\UFunc'_{\\yRat}(\\xRat, \\yRat)\\right)^{-1}_{\\yRat} \\left[ \\xRat, - \\DiscFac \\WFunc'(\\aRat) \\TFunc'_{\\yRat}(\\xRat,\\yRat)  \\right]\n\nwhere \\left( \\cdot \\right)^{-1}_{\\yRat} denotes the explicit inverse of a multivariate function with respect to \\yRat such that if f(x,y) = z then f^{-1}_{y}(x,z) = y.\n\nBy using an exogenous grid of the post-decision state \\aRat, we can solve for the optimal decision rule \\yRat at each point on the grid. This is the Endogenous Grid Method step.","type":"content","url":"/egmn#utility-function","position":63},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Transition","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl4","url":"/egmn#transition","position":64},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Transition","lvl3":"The Endogenous Grid Method for Subproblems","lvl2":"Conditions for using the Sequential Endogenous Grid Method"},"content":"If the generic subproblem has no separable utility, but instead has a differentiable and invertible transition, then the Endogenous Grid Method can still be used.\\begin{split}\n        \\VFunc(\\xRat) &  = \\max_{\\yRat  \\in \\PGro(\\xRat)}  \\WFunc(\\aRat) \\\\\n        & \\text{s.t.} \\\\\n        \\aRat & = \\TFunc(\\xRat,\\yRat)\n    \\end{split}\n\nHere, the first-order condition is\\WFunc'(\\aRat)\\TFunc'_{\\yRat}(\\xRat,\\yRat)  = 0\n\nand the Endogenous Grid Method step is\\yRat = \\left(\\TFunc'_{\\yRat}(\\xRat,\\yRat)\\right)^{-1}_{\\yRat} \\left[ \\xRat, 1 / \\WFunc'(\\aRat)\\right]","type":"content","url":"/egmn#transition","position":65},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Conclusion"},"type":"lvl2","url":"/egmn#conclusion","position":66},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Conclusion"},"content":"Summarize the method: Begin your conclusion by summarizing the new computational method you developed or proposed. Provide a brief overview of the key features of the method and how it differs from existing methods.\n\nThis paper introduces a novel method for solving dynamic stochastic optimization problems called the Sequential Endogenous Grid Method (EGMn). Given a problem with multiple decisions (or control variables), the Sequential Endogenous Grid Method proposes separating the problem into a sequence of smaller subproblems that can be solved sequentially by using more than one EGM step. Then, depending on the resulting endogenous grid from each subproblem, this paper proposes different methods for interpolating functions on non-rectilinear grids, called the Warped Grid Interpolation (WGI) and the Gaussian Process Regression (GPR) method.\n\nEGMn is similar to the Nested Endogenous Grid Method (NEGM) and the Generalized Endogenous Grid Method (G2EGM) in that it can solve problems with multiple decisions, but it differs from these methods in that by choosing the subproblems strategically, we can take advantage of multiple sequential EGM steps to solve complex multidimensional models in a fast and efficient manner. Additionally, the use of machine learning tools such as the GPR overcomes bottlenecks seen in unstructured interpolation using Delauany triangulation and other similar methods.Evaluate the method: Evaluate the strengths and limitations of the new computational method you developed or proposed. Discuss how the method compares to existing methods in terms of accuracy, efficiency, and ease of use.Demonstrate the method: If possible, provide an example of how the new computational method can be used to solve a problem or answer a research question. This will help the reader understand the practical implications of the method.Highlight potential applications: Discuss potential applications of the new computational method. This will help demonstrate the broader impact of the method beyond the specific problem or research question addressed in your paper.Discuss future directions: Provide suggestions for future research based on the new computational method you developed or proposed. This can include improvements to the method, potential extensions to other areas of research, or new applications of the method.Conclude with final thoughts: End your conclusion with some final thoughts that tie together the main points of your paper. This will help leave a lasting impression on the reader.","type":"content","url":"/egmn#conclusion","position":67},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl2","url":"/egmn#appendix","position":68},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"","type":"content","url":"/egmn#appendix","position":69},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The problem for a retired household","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#the-problem-for-a-retired-household","position":70},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The problem for a retired household","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"I designate as \\wFunc_{t}(\\mRat_{t}) the problem of a retired household at time t with total resources \\mRat. The retired household solves a simple consumption-savings problem with no income uncertainty and a certain next period pension of \\underline{\\tShkEmp}.\\begin{split}\n        \\wFunc_{t}(\\mRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) +\n        \\DiscFac \\wFunc_{t+1}(\\mRat_{t}) \\\\\n        & \\text{s.t.} \\\\\n        \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} +\n        \\underline{\\tShkEmp}\n    \\end{split}\n\nNotice that there is no uncertainty and the household receives a retirement\nincome \\underline{\\tShkEmp} every period until death.","type":"content","url":"/egmn#the-problem-for-a-retired-household","position":71},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The problem for a worker household","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#the-problem-for-a-worker-household","position":72},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The problem for a worker household","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"The value function of a worker household is\\VFunc_{t}(\\mRat_{t}, \\nRat_{t}) = \\Ex_\\error \\max \\left\\{\n    \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) + \\sigma_{\\error}\n    \\error_{\\Work} ,\n    \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Retire) + \\sigma_{\\error}\n    \\error_{\\Retire} \\right\\}\n\nwhere the choice specific problem for a working household that decides to\ncontinue working is\\begin{split}\n        \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\cRat_{t},\n            \\dRat_{t}} \\util(\\cRat_{t}) - \\kapShare + \\DiscFac\n        \\Ex_{t} \\left[\n            \\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1})\n            \\right] \\\\\n        & \\text{s.t.} \\\\\n        \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n        \\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}) \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n        \\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n    \\end{split}\n\nand the choice specific problem for a working household that decides to retire\nis\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Retire) =\n    \\wFunc_{t}(\\mRat_{t}+\\nRat_{t})","type":"content","url":"/egmn#the-problem-for-a-worker-household","position":73},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Applying the Sequential EGM","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#applying-the-sequential-egm","position":74},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Applying the Sequential EGM","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"The first step is to define a post-decision value function. Once the household\ndecides their level of consumption and pension deposits, they are left with\nliquid assets they are saving for the future and illiquid assets in their\npension account which they can’t access again until retirement. The\npost-decision value function can be defined as\\begin{split}\n        \\vEnd_{t}(\\aRat_{t}, \\bRat_{t}) & =  \\DiscFac\n        \\Ex_{t} \\left[ \\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n        & \\text{s.t.} \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n        \\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n    \\end{split}\n\nThen redefine the working agent’s problem as\\begin{split}\n        \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\cRat_{t},\n            \\dRat_{t}} \\util(\\cRat_{t})  - \\kapShare + \\vEnd_{t}(\\aRat_{t},\n        \\bRat_{t}) \\\\\n        \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n        \\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}) \\\\\n    \\end{split}\n\nClearly, the structure of the problem remains the same, and this is the problem\nthat G2EGM solves. We’ve only moved some\nof the stochastic mechanics out of the problem. Now, we can apply the\nsequential EGMn method. Let the agent first decide \\dRat_{t}, the deposit\namount into their retirement; we will call this the deposit problem, or outer loop. Thereafter, the\nagent will have net liquid assets\nof \\lRat_{t} and pension assets of \\bRat_{t}.\\begin{split}\n        \\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\dRat_{t}}\n        \\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) \\\\\n        & \\text{s.t.} \\\\\n        \\lRat_{t} & = \\mRat_{t} - \\dRat_{t} \\\\\n        \\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t})\n    \\end{split}\n\nNow, the agent can move on to picking their consumption and savings; we can call this\nthe pure consumption problem or inner loop.\\begin{split}\n        \\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) & = \\max_{\\cRat_{t}}\n        \\util(\\cRat_{t}) - \\kapShare  + \\vEnd_{t}(\\aRat_{t}, \\bRat_{t}) \\\\\n        & \\text{s.t.} \\\\\n        \\aRat_{t} & = \\lRat_{t} - \\cRat_{t} \\\\\n    \\end{split}\n\nBecause we’ve already made the pension decision, the amount of pension assets\ndoes not change in this loop and it just passes through to the post-decision\nvalue function.","type":"content","url":"/egmn#applying-the-sequential-egm","position":75},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#solving-the-problem","position":76},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"","type":"content","url":"/egmn#solving-the-problem","position":77},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Solving the Inner Consumption Saving Problem","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl4","url":"/egmn#solving-the-inner-consumption-saving-problem","position":78},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Solving the Inner Consumption Saving Problem","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"Let’s start with the pure consumption-saving problem, which we can summarize by\nsubstitution as\\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) - \\kapShare +\n    \\vEnd_{t}(\\lRat_{t} - \\cRat_{t}, \\bRat_{t})\n\nThe first-order condition is\\util'(\\cRat_{t}) = \\vEnd_{t}^{\\aRat}(\\lRat_{t}-\\cRat_{t}, \\bRat_{t}) =\n    \\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t})\n\nWe can invert this Euler equation as in standard EGM to obtain the consumption\nfunction.\\cEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) =\n    \\util'^{-1}\\left(\\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t})\\right)\n\nAgain as before, \\lEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) =\n    \\cEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) + \\aRat_{t}. To sum up, using an\nexogenous\ngrid of (\\aRat_{t}, \\bRat_{t}) we obtain the trio (\\cEndFunc_{t}(\\aRat_{t},\n    \\bRat_{t}), \\lEndFunc_{t}(\\aRat_{t},\n    \\bRat_{t}), \\bRat_{t}) which\nprovides an\ninterpolating function for our optimal consumption decision rule over the\n(\\lRat, \\bRat) grid. Without loss of generality, assume \\lEndFunc_{t} =\n    \\lEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) and define the interpolating\nfunction as\\cTarg_{t}(\\lEndFunc_{t}, \\bRat_{t}) \\equiv \\cEndFunc_{t}(\\aRat_{t},\n    \\bRat_{t})\n\nFor completeness, we derive the envelope conditions as well, and as we will\nsee, these will be useful when solving the next section.\\begin{split}\n        \\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) & =\n        \\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t}) = \\util'(\\cRat_{t}) \\\\\n        \\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t}) & =\n        \\vEnd_{t}^{\\bRat}(\\aRat_{t}, \\bRat_{t})\n    \\end{split}","type":"content","url":"/egmn#solving-the-inner-consumption-saving-problem","position":79},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Solving the Outer Pension Deposit Problem","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl4","url":"/egmn#solving-the-outer-pension-deposit-problem","position":80},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl4":"Solving the Outer Pension Deposit Problem","lvl3":"Solving the problem","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"Now, we can move on to solving the deposit problem, which we can also summarize\nas\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) = \\max_{\\dRat_{t}}\n    \\vOpt_{t}(\\mRat_{t}\n    - \\dRat_{t}, \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}))\n\nThe first-order condition is\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t})(-1) +\n    \\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})(1+\\gFunc'(\\dRat_{t})) = 0\n\nRearranging this equation gives\\gFunc'(\\dRat_{t}) = \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n        \\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})} - 1\n\nAssuming that \\gFunc'(\\dRat) exists and is invertible, we can find\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\gFunc'^{-1}\\left(\n    \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n        \\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t},\n        \\bRat_{t})} - 1 \\right)\n\nUsing this, we can back out \\nRat_{t} as\\nEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\bRat_{t} -\n    \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) - \\gFunc(\\dEndFunc_{t}(\\lRat_{t},\n        \\bRat_{t}))\n\nand \\mRat_{t} as\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\lRat_{t} +\n    \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\n\nIn sum, given an exogenous grid (\\lRat_{t}, \\bRat_{t}) we obtain the triple\n\\left(\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}), \\nEndFunc_{t}(\\lRat_{t},\n        \\bRat_{t}), \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\\right), which\nwe can use to\ncreate an interpolator for the decision rule \\dRat_{t}.\n\nTo close the solution method, the envelope conditions are\\begin{split}\n        \\vFunc_{t}^{\\mRat}(\\mRat_{t}, \\nRat_{t}, \\Work) & =\n        \\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) \\\\\n        \\vFunc_{t}^{\\nRat}(\\mRat_{t}, \\nRat_{t}, \\Work) & =\n        \\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})\n    \\end{split}","type":"content","url":"/egmn#solving-the-outer-pension-deposit-problem","position":81},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Is g invertible?","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#is-g-invertible","position":82},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Is g invertible?","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"We’ve already seen that \\util'(\\cdot) is invertible, but is \\gFunc?\\gFunc(\\dRat) = \\xFer \\log(1+\\dRat) \\qquad \\gFunc'(\\dRat) =\n    \\frac{\\xFer}{1+\\dRat} \\qquad \\gFunc'^{-1}(y) = \\xFer/y - 1","type":"content","url":"/egmn#is-g-invertible","position":83},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The Post-Decision Value and Marginal Value Functions","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#the-post-decision-value-and-marginal-value-functions","position":84},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"The Post-Decision Value and Marginal Value Functions","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"\\begin{split}\n        \\vEnd_{t}(\\aRat, \\bRat) & =  \\DiscFac \\Ex_{t} \\left[\n            \\VFunc(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n        & \\text{s.t.} \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n        \\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n    \\end{split}\n\nand\\begin{split}\n        \\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t}) & =  \\DiscFac\n        \\Rfree_{\\aRat} \\Ex_{t} \\left[ \\VFunc^{\\mRat}_{t+1}(\\mRat_{t+1},\n            \\nRat_{t+1})\n            \\right] \\\\\n        & \\text{s.t.} \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n        \\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n    \\end{split}\n\nand\\begin{split}\n        \\vEnd_{t}^{\\bRat}(\\aRat_{t}, \\bRat_{t}) & =  \\DiscFac\n        \\Rfree_{\\bRat} \\Ex_{t} \\left[ \\VFunc^{\\nRat}_{t+1}(\\mRat_{t+1},\n            \\nRat_{t+1})\n            \\right] \\\\\n        & \\text{s.t.} \\\\\n        \\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n        \\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n    \\end{split}","type":"content","url":"/egmn#the-post-decision-value-and-marginal-value-functions","position":85},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Taste Shocks","lvl2":"Solving the illustrative G2EGM model with EGMn"},"type":"lvl3","url":"/egmn#taste-shocks","position":86},{"hierarchy":{"lvl1":"EGM$^n$: The Sequential Endogenous Grid Method","lvl3":"Taste Shocks","lvl2":"Solving the illustrative G2EGM model with EGMn"},"content":"From discrete choice theory and from DCEGM paper, we know that\\Ex_{t} \\left[\n        \\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}, \\error_{t+1}) \\right] =\n    \\sigma \\log \\left[ \\sum_{\\Decision \\in \\{\\Work, \\Retire\\}} \\exp \\left(\n        \\frac{\\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1},\n            \\Decision)}{\\sigma_\\error} \\right)  \\right]\n\nand\\Prob_{t}(\\Decision ~ \\lvert ~ \\mRat_{t+1}, \\nRat_{t+1}) = \\frac{\\exp\n        \\left(\n        \\vFunc_{t + 1}(\\mRat_{t+1}, \\nRat_{t+1}, \\Decision) /\n        \\sigma_\\error\n        \\right)\n    }{  \\sum\\limits_{\\Decision \\in \\{\\Work, \\Retire\\}} \\exp \\left(\n        \\frac{\\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1},\n            \\Decision)}{\\sigma_\\error} \\right)}\n\nthe first-order conditions are therefore\\vOptAlt_{t}^{\\mRat}(\\mRat_{t+1}, \\nRat_{t+1}) = \\sum_{\\Decision \\in\n        \\{\\Work, \\Retire\\}} \\Prob_{t}(\\Decision ~\n    \\lvert ~\n    \\mRat_{t+1}, \\nRat_{t+1}) \\vFunc_{t+1}^{\\mRat}(\\mRat_{t+1},\n    \\nRat_{t+1},\n    \\Decision)\n\nBarillas & Fernández-Villaverde (2007)\n\nMaliar & Maliar (2013)\n\nFella (2014)\n\nWhite (2015)\n\nIskhakov et al. (2017), among others.\n\nAs in \n\nCarroll (2009), where the utility of normalized consumption and leisure is defined as\\utilFunc(\\cRat_{t}, \\leisure_{t}) = \\PLev_{t}^{1-\\CRRA} \\frac{\\cRat_{t}^{1-\\CRRA}}{1-\\CRRA} + (\\labShare\\PLev_{t})^{1-\\CRRA} \\frac{\\leisure_{t}^{1-\\leiShare}}{1-\\leiShare}\n\nFor this illustration, we generate z’s arbitrarily using the function f(x,y) = (xy)^{1/4}.\n\nFor more examples of the Warped Grid Interpolation method in action, see the github project\n\nalanlujan91/multinterp.\n\nGardner et al. (2018)\n\nFor details see notebook.\n\nDruedahl (2021).\n\nDruedahl & Jørgensen (2017).","type":"content","url":"/egmn#taste-shocks","position":87},{"hierarchy":{"lvl1":"Abstract"},"type":"lvl1","url":"/titlepage","position":0},{"hierarchy":{"lvl1":"Abstract"},"content":"Heterogeneous agent models with multiple decisions are often solved using inefficient grid search methods that require\nmany evaluations and are slow.\nThis paper provides a novel method for solving such models using an extension of the Endogenous Grid Method (EGM) that\nuses Gaussian Process Regression (GPR) to interpolate functions on unstructured grids.\nFirst, I propose an intuitive and strategic procedure for decomposing a problem into subproblems which allows the use of\nefficient solution methods.\nSecond, using an exogenous grid of post-decision states and solving for an endogenous grid of pre-decision states that\nobey a first-order condition greatly speeds up the solution process.\nThird, since the resulting endogenous grid can often be non-rectangular at best and unstructured at worst, GPR provides\nan efficient and accurate method for interpolating the value, marginal value, and decision functions.\nApplied sequentially to each decision within the problem, the method is able to solve heterogeneous agent models with\nmultiple decisions in a fraction of the time and with less computational resources than are required by standard methods\ncurrently used.\nSoftware to reproduce these methods is available under the \n\nEcon-ARK/HARK project for\nthe python programming language.\n\n\n\nI would like to thank Christopher D. Carroll and Simon Scheidegger for their helpful comments and suggestions. The\nremaining errors are my own. All figures and other numerical results were produced using\nthe \n\nEcon-ARK/HARK toolkit \n\nCarroll et al., 2018. Additional libraries used in the\nproduction of this paper include but are not limited to: \n\nscipy \n\nVirtanen et al., 2020, \n\nnumpy \n\nHarris et al., 2020, \n\nnumba (\n\n\nLam et al., 2015, \n\ncupy \n\nOkuta et al., 2017, \n\nscikit-learn (\n\n\nPedregosa et al., 2011, \n\npytorch \n\nPaszke et al., 2019,\nand \n\ngpytorch \n\nGardner et al., 2018\n\n","type":"content","url":"/titlepage","position":1},{"hierarchy":{"lvl1":"Introduction"},"type":"lvl1","url":"/intro","position":0},{"hierarchy":{"lvl1":"Introduction"},"content":"","type":"content","url":"/intro","position":1},{"hierarchy":{"lvl1":"Introduction","lvl2":"Background"},"type":"lvl2","url":"/intro#background","position":2},{"hierarchy":{"lvl1":"Introduction","lvl2":"Background"},"content":"Introduce the topic by providing a brief overview of the issue and why it is important to study it.Identify the research question: Clearly state the research question or problem being addressed in the current study.\n Provide context: Explain why the topic is important to study and what gap in the existing knowledge the current study\n\naims to fill.Summarize the existing literature: Briefly describe what is currently known about the topic, including any relevant\n\nstudies or theories that have been previously published.Highlight the limitations of previous research: Identify any limitations or gaps in the existing literature and\n\nexplain how the current study will address these limitations.Provide a rationale for the study: Explain why the current study is needed and why it is a significant contribution to\n\nthe existing knowledge on the topic.Use only the first paragraph to state the question and describe its importance. Don't weave\n around, be overly broad, or use prior literature to motivate it (the question is not important\n because so many papers looked at this issue before!).\n\nMacroeconomic modeling aims to describe a complex world of agents interacting with each other and making decisions in a\ndynamic setting. The models are often very complex, require strong underlying assumptions, and use a lot of\ncomputational power to solve. One of the most common methods to solve these complex problems is using a grid search\nmethod to solve the model. The Endogenous Grid Method (EGM) developed by \n\nCarroll (2006) allows dynamic\noptimization problems to be solved in a more computationally efficient and faster manner than the previous method of\nconvex optimization using grid search. Many problems that before took hours to compute became much easier to solve and\nallowed macroeconomists and computational economists to focus on estimation and simulation.\nHowever, the Endogenous Grid Method is limited to a few specific classes of problems. Recently, the classes of problems\nto which EGM can be applied have been expanded, but with every new method comes a new set of limitations.\nThis paper introduces a new approach to EGM in a multivariate setting. The method is called Sequential EGM (or EGMn)\nand introduces a novel way of breaking down complex problems into a sequence of simpler, smaller, and more tractable\nproblems, along with an exploration of new multidimensional interpolation methods that can be used to solve these\nproblems.","type":"content","url":"/intro#background","position":3},{"hierarchy":{"lvl1":"Introduction","lvl2":"Literature Review"},"type":"lvl2","url":"/intro#literature-review","position":4},{"hierarchy":{"lvl1":"Introduction","lvl2":"Literature Review"},"content":"Summarize the existing literature on the topic and highlight any gaps or limitations in the current research.Then use the second paragraph for a summary of the most relevant literature\n (not a full Section!). Hint: use present tense, to be consistent. \"Smith (1986) presents a similar model, ...\"\n\nCarroll (2006) first introduced the Endogenous Grid Method as a way to speed up the solution of dynamic\nstochastic consumption-savings problems. The method consists of starting with an exogenous grid of post-decision states\nand using the inverse of the first-order condition to find the optimal consumption policy that rationalizes such\npost-decision states. Given the optimal policy and post-decision states, it is straightforward to calculate the initial\npre-decision state that leads to the optimal policy. Although this method is certainly innovative, it only applied to a\nmodel with one control variable and one state variable. \n\nBarillas & Fernández-Villaverde (2007) further extend this method by including\nmore than one control variable in the form of a labor-leisure choice, as well as a second state variable for stochastic\npersistence.\n\nHintermaier & Koeniger (2010) introduce a model with collateral constraints and non-separable utility and solve using an EGM\nmethod that allows for occasionally binding constraints among endogenous variables. \n\nJørgensen (2013) evaluates\nthe performance of the Endogenous Grid Method against other methods for solving dynamic stochastic optimization problems\nand finds it to be fast and efficient. \n\nMaliar & Maliar (2013) develop the Envelope Condition Method based on a similar\nidea as the Endogenous Grid Method, avoiding the need for costly numerical optimization and grid search. However, their\nmodel is limited to infinite horizon problems as it is a forward solution method.\n\nFurther development into a multivariate Endogenous Grid Method expanded the ability of researchers to solve models\nefficiently. \n\nWhite (2015) formally characterized the conditions for the Endogenous Grid Method and developed an\ninterpolation method for structured non-rectilinear, or curvilinear, grids. \n\nIskhakov (2015) additionally\nestablishes conditions for solving multivariate models with EGM, requiring the invertibility of a triangular system of\nfirst-order conditions. \n\nLudwig & Schön (2018) also develops a novel interpolating method using Delaunay triangulation of\nthe resulting unstructured endogenous grid. However, the authors show that the gains from avoiding the grid search\nmethod are often offset by the costly construction of the triangulation.\n\nFor the papers discussed above, continuity and smoothness of the value and first-order conditions are strict\nrequirements. \n\nFella (2014) first introduced a method to solve non-convex problems using the Endogenous Grid\nMethod. The idea is based on evaluating necessary but not sufficient candidates for the first-order condition in\noverlapping regions of the state space. \n\nArellano et al. (2016) use the Envelope Condition Method to solve a sovereign\ndefault risk model with similar efficiency gains to EGM. \n\nIskhakov et al. (2017) further advances the methodology by\nusing extreme errors to solve discrete choice problems with Endogenous Grid Method. These methods however were only\napplied to a single control variable and a single state variable. \n\nDruedahl & Jørgensen (2017) introduces the G2EGM to\nhandle non-convex problems with more than 1 control variable and more than 1 state variable. This method is also capable\nof handling occasionally binding constraints which previous multivariate EGM methods were not.\n\nClausen & Strub (2020) formalize the applicability of the Endogenous Grid Method and its extensions to discrete choice\nmodels and discuss the nesting of problems to efficiently find accurate solutions. \n\nDruedahl (2021) similarly\nsuggest the nesting of problems to efficiently use the Endogenous Grid Method within problems with multiple control\nvariables. However, while these nested methods reduce the complexity of solving these models, they often still require\ngrid search methods as is the case with \n\nDruedahl (2021).Finally, this paper contributes to the literature of solving dynamic optimization problems using machine learning\n\ntools. \n\nScheidegger & Bilionis (2019) introduce the use of Gaussian Process Regression to compute global solutions for\nhigh-dimensional dynamic stochastic problems. \n\nMaliar et al. (2021) use non-linear regression and neural networks to\nestimate systems of equations that characterize dynamic economic models.","type":"content","url":"/intro#literature-review","position":5},{"hierarchy":{"lvl1":"Introduction","lvl2":"Research Question"},"type":"lvl2","url":"/intro#research-question","position":6},{"hierarchy":{"lvl1":"Introduction","lvl2":"Research Question"},"content":"Clearly state the research question or problem being addressed in the current study.Next, while still on page one, the third paragraph must begin: \"The purpose of this paper is ...\",\n and summarize what you actually do. (Paragraphs 2 and 3 could be reversed.)\n\nThe purpose of this paper is to describe a new method for solving dynamic optimization problems efficiently and\naccurately while avoiding convex optimization and grid search methods with the use of the Endogenous Grid Method and\nfirst-order conditions. The method is called Sequential EGM (or EGMn) and introduces a novel way of breaking down\ncomplex problems into a sequence of simpler, smaller, and more tractable problems, along with an exploration of new\nmultidimensional interpolation methods that can be used to solve these problems. This paper also illustrates an example\nof how Sequential EGM can be used to solve a dynamic optimization problem in a multivariate setting.","type":"content","url":"/intro#research-question","position":7},{"hierarchy":{"lvl1":"Introduction","lvl2":"Methodology"},"type":"lvl2","url":"/intro#methodology","position":8},{"hierarchy":{"lvl1":"Introduction","lvl2":"Methodology"},"content":"Briefly describe the research methodology used in the study, including any data sources, econometric techniques, or\n\nother methods used.\n\nThe sequential Endogenous Grid Method consists of 3 major parts: First, the problem to be solved should be broken up\ninto a sequence of smaller problems that themselves don’t add any additional state variables or introduce asynchronous\ndynamics with respect to the uncertainty. If the problem is broken up in such a way that uncertainty can happen in more\nthan one period, then the solution to this sequence of problems might be different from the aggregate problem due to\ngiving the agent additional information about the future by realizing some uncertainty. Second, I evaluate each of the\nsmaller problems to see if they can be solved using the Endogenous Grid Method. This evaluation is of greater scope than\nthe traditional Endogenous Grid Method, as it allows for the resulting exogenous grid to be non-regular. If the\nsubproblem can not be solved with EGM, then convex optimization is used. Third, if the exogenous grid generated by the\nEGM is non-regular, then I use a multidimensional interpolation method that takes advantage of machine learning tools to\ngenerate an interpolating function. Solving each subproblem in this way, the sequential Endogenous Grid Method is\ncapable of solving complex problems that are not solvable with the traditional Endogenous Grid Method and are difficult\nand time-consuming to solve with convex optimization and grid search methods.","type":"content","url":"/intro#methodology","position":9},{"hierarchy":{"lvl1":"Introduction","lvl2":"Contributions"},"type":"lvl2","url":"/intro#contributions","position":10},{"hierarchy":{"lvl1":"Introduction","lvl2":"Contributions"},"content":"Discuss how the current study contributes to the existing literature and what new insights it provides.That sets you up for the fourth paragraph, which lists \"The contributions of\n this work\" – relative to that prior literature. Clarify what you do that's different\n\nThe Sequential Endogenous Grid Method is capable of solving multivariate dynamic optimization problems in an efficient\nand fast manner by avoiding grid search. This should allow researchers and practitioners to solve more complex problems\nthat were previously not easily accessible to them, but more accurately capture the dynamics of the macroeconomy. By\nusing advancements in machine learning techniques such as Gaussian Process Regression, the Sequential Endogenous Grid\nMethod is capable of solving problems that were not previously able to be solved using the traditional Endogenous Grid\nMethod. In particular, the Sequential Endogenous Grid Method is different from NEGM in that it allows for using more\nthan one Endogenous Grid Method step to solve a problem, avoiding costly grid search methods to the extent that the\nproblem allows.\n\nAdditionally, the Sequential Endogenous Grid Method often sheds light on the problem by breaking it down into a sequence\nof simpler problems that were not previously apparent. This is because intermediary steps in the solution process\ngenerate value and marginal value functions of different pre- and post-decision states that can be used to understand\nthe problem better.The fifth paragraph then summarizes your results. Tell the answer, so they know what to expect,\n and how to think about each step along the way, what's driving your results.","type":"content","url":"/intro#contributions","position":11},{"hierarchy":{"lvl1":"Introduction","lvl2":"Outline"},"type":"lvl2","url":"/intro#outline","position":12},{"hierarchy":{"lvl1":"Introduction","lvl2":"Outline"},"content":"Provide a brief overview of the results and conclusions that will be presented in the article.\n In the sixth and final paragraph, as an aid to the reader, plot the course for the rest of the paper.\n \"The first Section below presents a theoretical model that can be used to generate specific\n hypotheses. Then [Section %s](#method) presents the econometric model, ...\"\n\nSection %s presents a basic model that illustrates the sequential Endogenous Grid Method in one dimension.\nThen \n\nSection %s introduces a more complex method with two state variables to demonstrate the use of machine\nlearning tools to generate an interpolating function. In \n\nSection %s I present the unstructured\ninterpolation methods using machine learning in more detail. \n\nSection %s discusses the theoretical\nrequirements to use the Sequential Endogenous Grid Method. Finally, \n\nSection %s concludes with some\nlimitations and future work.\n\nBarillas & Fernández-Villaverde (2007)\n\nMaliar & Maliar (2013)\n\nFella (2014)\n\nWhite (2015)\n\nIskhakov et al. (2017), among others.","type":"content","url":"/intro#outline","position":13},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method"},"type":"lvl1","url":"/method","position":0},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method"},"content":"","type":"content","url":"/method","position":1},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"A basic model"},"type":"lvl2","url":"/method#a-basic-model","position":2},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"A basic model"},"content":"The baseline problem which I will use to demonstrate the Sequential Endogenous Grid Method (EGMn) is a discrete time\nversion of \n\nBodie et al. (1992) where a consumer has the ability to adjust their labor as well as their consumption in\nresponse to financial risk. The objective consists of maximizing the present discounted lifetime utility of consumption\nand leisure.\\VFunc_0(\\BLev_0, \\tShkEmp_0) = \\max \\Ex_{t}\n\\left[ \\sum_{n = 0}^{T-t} \\DiscFac^{n} \\utilFunc(\\CLev_{t+n}, \\Leisure_{t+n})  \\right]\n\nIn particular, this example makes use of a utility function that is based on Example 1 in the paper, which is that of\nadditively separable utility of labor and leisure as\\utilFunc(\\CLev, \\Leisure) = \\util(\\CLev) + \\h(\\Leisure) = \\frac{C^{1-\\CRRA}}{1-\\CRRA} + \\labShare^{1-\\CRRA}\n\\frac{\\Leisure^{1-\\leiShare}}{1-\\leiShare}\n\nwhere the term \\labShare^{1-\\CRRA} is introduced to allow for a balanced growth path as in \n\nMertens & Ravn (2011). The\nuse of additively separable utility is ad-hoc, as it will allow for the use of multiple EGM steps in the solution\nprocess, as we’ll see later.\n\nThis model represents a consumer who begins the period with a level of bank balances \\bRat_{t} and a given wage offer\n\\tShkEmp_{t}. Simultaneously, they are able to choose consumption, labor intensity, and a risky portfolio share with\nthe objective of maximizing their utility of consumption and leisure, as well as their future wealth.\n\nThe problem can be written in normalized recursive form as\\utilFunc(\\cRat_{t}, \\leisure_{t}) = \\PLev_{t}^{1-\\CRRA} \\frac{\\cRat_{t}^{1-\\CRRA}}{1-\\CRRA} + (\\labShare\\PLev_{t})\n^{1-\\CRRA} \\frac{\\leisure_{t}^{1-\\leiShare}}{1-\\leiShare}\\begin{split}\n\\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{\\{\\cRat_{t},\n\\leisure_{t}, \\riskyshare_{t}\\}} \\utilFunc(\\cRat_{t}, \\leisure_{t}) +\n\\DiscFac \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n\\vFunc_{t+1} (\\bRat_{t+1},\n\\tShkEmp_{t+1}) \\right] \\\\\n& \\text{s.t.} \\\\\n\\labor_{t} & = 1 - \\leisure_{t} \\\\\n\\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t}\\labor_{t} \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n\\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree)\n\\riskyshare_{t} \\\\\n\\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}\n\\end{split}\n\nin which \\labor_{t} is the time supplied to labor net of leisure, \\mRat_{t} is the market resources totaling bank\nbalances and labor income, \\aRat_{t} is the amount of saving assets held by the consumer, and \\riskyshare_{t} is the\nrisky share of assets, which induce a \\Rport_{t+1} return on portfolio that results in next period’s bank balances\n\\bRat_{t+1} normalized by next period’s permanent income \\PGro_{t+1}.\\begin{equation}\n \\begin{split}\n \\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{\\cRat_{t},\n \\leisure_{t}} \\util(\\cRat_{t}) + \\h(\\leisure_{t}) +\n \\vEnd_{t} (\\aRat_{t})\n \\\\\n & \\text{s.t.} \\\\\n \\labor_{t} & = 1 - \\leisure_{t} \\\\\n \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t}\\labor_{t} \\\\\n \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n \\end{split}\n \\end{equation}","type":"content","url":"/method#a-basic-model","position":3},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Restating the problem sequentially"},"type":"lvl2","url":"/method#restating-the-problem-sequentially","position":4},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Restating the problem sequentially"},"content":"We can make a few choices to create a sequential problem which will allow us to use multiple EGM steps in succession.\nFirst, the\nagent decides their labor-leisure trade-off and receives a wage. Their wage\nplus their previous bank balance then becomes their market resources. Second, given\nmarket resources, the agent makes a pure consumption-saving decision. Finally, given an amount of savings, the consumer\nthen decides their risky portfolio share.\n\nStarting from the beginning of the period, we can define the labor-leisure problem as\\begin{split}\n\\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) & = \\max_{ \\leisure_{t}}\n\\h(\\leisure_{t}) + \\vOpt_{t} (\\mRat_{t}) \\\\\n& \\text{s.t.} \\\\\n0 & \\leq \\leisure_{t} \\leq 1 \\\\\n\\labor_{t} & = 1 - \\leisure_{t} \\\\\n\\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t}\\labor_{t}.\n\\end{split}\n\nThe pure consumption-saving problem is then\\begin{split}\n\\vOpt_{t}(\\mRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) + \\DiscFac\\vEnd_{t}(\\aRat_{t}) \\\\\n& \\text{s.t.} \\\\\n0 & \\leq \\cRat_{t} \\leq \\mRat_{t} \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t}.\n\\end{split}\n\nFinally, the risky portfolio problem is\\begin{split}\n\\vEnd_{t}(\\aRat_{t}) & = \\max_{\\riskyshare_{t}}\n\\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n\\vFunc_{t+1}(\\bRat_{t+1},\n\\tShkEmp_{t+1}) \\right] \\\\\n& \\text{s.t.} \\\\\n0 & \\leq \\riskyshare_{t} \\leq 1 \\\\\n\\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree)\n\\riskyshare_{t} \\\\\n\\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}.\n\\end{split}\n\nThis sequential approach is explicitly modeled after the nested approaches explored in \n\nClausen & Strub (2020) and {cite:\nt}Druedahl2021. However, I will offer additional insights that expand on these methods. An important observation is\nthat now, every single choice is self-contained in a subproblem, and although the structure is specifically chosen to\nminimize the number of state variables at every stage, the problem does not change by this structural imposition. This\nis because there is no additional information or realization of uncertainty that happens between decisions, as can be\nseen by the expectation operator being in the last subproblem. From the perspective of the consumer, these decisions are\nessentially simultaneous, but a careful organization into sub-period problems enables us to solve the model more\nefficiently and can provide key economic insights. In this problem, as we will see, a key insight will be the ability to\nexplicitly calculate the marginal value of wealth and the Frisch elasticity of labor.\\begin{equation}\n \\begin{split}\n \\vFunc_{t}(\\bRat_{t}) & = \\max_{ \\labor_{t}} \\h(\\leisure_{t}) + \\Ex_{t} \\left[ \\vOpt_{t} (\\mRat_{t}) \\right] \\\\\n & \\text{s.t.} \\\\\n \\labor_{t} & = 1 - \\leisure_{t} \\\\\n \\mRat_{t} & = \\bRat_{t} + \\tShkEmp_{t+1}\\labor_{t} \\\\\n \\end{split}\n\\end{equation}\n\n\\begin{equation}\n \\begin{split}\n \\vOpt_{t}(\\mRat_{t}) & = \\max_{\\aRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\Ex_{t}\n\n\\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1} (\\bRat_{t+1}) \\right] \\& \\text{s.t.} \\\\\n \\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n \\bRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1}\n \\end{split}\n\\end{equation}","type":"content","url":"/method#restating-the-problem-sequentially","position":5},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The portfolio decision subproblem"},"type":"lvl2","url":"/method#the-portfolio-decision-subproblem","position":6},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The portfolio decision subproblem"},"content":"As useful as it is to be able to use the EGM step more than once, there are clear problems where the EGM step is not\napplicable. This basic labor-portfolio choice problem demonstrates where we can use an additional EGM step, and where we\ncan not. First, we go over a subproblem where we can not use the EGM step.\n\nIn reorganizing the labor-portfolio problem into subproblems, we assigned the utility of leisure to the leisure-labor\nsubproblem and the utility of consumption to the consumption-savings subproblem. There are no more separable convex\nutility functions to assign to this problem, and even if we re-organized the problem in a way that moved one of the\nutility functions into this subproblem, they would not be useful in solving this subproblem via EGM as there is no\ndirect relation between the risky share of portfolio and consumption or leisure. Therefore, the only way to solve this\nsubproblem is through standard convex optimization and root-finding techniques.\n\nRestating the problem in compact form gives\\vEnd_{t}(\\aRat_{t}) = \\max_{\\riskyshare_{t}} \\Ex_{t} \\left[ \\PGro_{t+1}^{1-\\CRRA}\n\\vFunc_{t+1}\\left(\\aRat_{t}(\\Rfree + (\\Risky_{t+1} - \\Rfree) \\riskyshare_{t}), \\tShkEmp_{t+1}\\right)\n\\right].\n\nThe first-order condition with respect to the risky portfolio share is then\\Ex_{t}\n\\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}^{\\bRat}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) (\\Risky_{t+1} - \\Rfree)  \\right] =\n0.\n\nFinding the optimal risky share requires numerical optimization and root-solving of the first-order condition. To close\nout the problem, we can calculate the envelope condition as\\vEnd_{t}'(\\aRat_{t}) = \\Ex_{t}\n\\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}^{\\bRat}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\Rport_{t+1} \\right].","type":"content","url":"/method#the-portfolio-decision-subproblem","position":7},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl3":"A note on avoiding taking expectations more than once","lvl2":"The portfolio decision subproblem"},"type":"lvl3","url":"/method#a-note-on-avoiding-taking-expectations-more-than-once","position":8},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl3":"A note on avoiding taking expectations more than once","lvl2":"The portfolio decision subproblem"},"content":"We could instead define the portfolio choice subproblem as:\\vEnd_{t}(\\aRat_{t}) = \\max_{\\riskyshare_{t}} \\vOptAlt(\\aRat_{t}, \\riskyshare_{t})\n\nwhere\\begin{split}\n\\vOptAlt_{t}(\\aRat_{t}, \\riskyshare_{t}) & = \\Ex_{t}\n\\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right)   \\right] \\\\\n\\Rport_{t+1} & = \\Rfree + (\\Risky_{t+1} - \\Rfree) \\riskyshare_{t} \\\\\n\\bRat_{t+1} & = \\aRat_{t} \\Rport_{t+1} / \\PGro_{t+1}\n\\end{split}\n\nIn this case, the process is similar. The only difference is that we don’t have to take expectations more than once.\nGiven the next period’s solution, we can calculate the marginal value functions as:\\begin{split}\n\\vOptAlt_{t}^{\\aRat}(\\aRat_{t}, \\riskyshare_{t}) & = \\Ex_{t}\n\\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}'\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\Rport_{t+1} \\right] \\\\\n\\vOptAlt_{t}^{\\riskyshare}(\\aRat_{t}, \\riskyshare_{t}) & = \\Ex_{t}\n\\left[ \\PGro_{t+1}^{-\\CRRA} \\vFunc_{t+1}'\\left(\\bRat_{t+1}, \\tShkEmp_{t+1}\\right) \\aRat_{t} (\\Risky_{t+1} - \\Rfree)   \\right] \\\\\n\\end{split}\n\nIf we are clever, we can calculate both of these in one step. Now, the optimal risky share can be found by the\nfirst-order condition and we can use it to evaluate the envelope condition.\\text{F.O.C.:} \\qquad \\vOptAlt_{t}^{\\riskyshare}(\\aRat_{t}, \\riskyshare_{t}^{*})  = 0 \\qquad\n\\text{E.C.:} \\qquad \\vEnd_{t}^{\\aRat}(\\aRat_{t}) = \\vOptAlt_{t}^{\\aRat}(\\aRat_{t}, \\riskyshare_{t}^{*})","type":"content","url":"/method#a-note-on-avoiding-taking-expectations-more-than-once","position":9},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The consumption-saving subproblem"},"type":"lvl2","url":"/method#the-consumption-saving-subproblem","position":10},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The consumption-saving subproblem"},"content":"The consumption-saving EGM follows \n\nCarroll (2006) but I will cover it for exposition. We can begin the solution\nprocess by restating the consumption-savings subproblem in a more compact form, substituting the market resources\nconstraint and ignoring the no-borrowing constraint for now. The problem is:\\vOpt_{t}(\\mRat_{t}) = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) +\n\\DiscFac \\vEnd_{t}(\\mRat_{t}-\\cRat_{t})\n\nTo solve, we derive the first-order condition with respect to \\cRat_{t} which gives the familiar Euler equation:\\utilFunc'(\\cRat_t) = \\DiscFac \\vEnd_{t}'(\\mRat_{t} - \\cRat_{t}) = \\DiscFac\n\\vEnd_{t}'(\\aRat_{t})\n\nInverting the above equation is the (first) EGM step.\\cEndFunc_{t}(\\aRat_{t}) = \\utilFunc'^{-1}\\left( \\DiscFac \\vEnd_{t}'(\\aRat_{t})\n\\right)\n\nGiven the utility function above, the marginal utility of consumption and its inverse are\\utilFunc'(\\cRat) = \\cRat^{-\\CRRA} \\qquad \\utilFunc'^{-1}(\\xRat) =\n\\xRat^{-1/\\CRRA}.\n\nCarroll (2006) demonstrates that by using an exogenous grid of \\aMat points we can find the unique\n\\cEndFunc_{t}(\\aMat) that optimizes the consumption-saving problem, since the first-order condition is necessary and\nsufficient.\nFurther, using the market resources constraint, we can recover the exact amount\nof market resources that is consistent with this consumption-saving decision as\\mEndFunc_{t}(\\aMat) = \\cEndFunc_{t}(\\aMat) + \\aMat.\n\nThis \\mEndFunc_{t}(\\aMat) is the ``endogenous’’ grid that is consistent\nwith the exogenous decision grid \\aMat. Now that we have a\n(\\mEndFunc_{t}(\\aMat), \\cEndFunc_{t}(\\aMat)) pair for each\n\\aRat \\in \\aMat, we can construct an interpolating consumption function for\nmarket resources points that are off-the-grid.\n\nThe envelope condition will be useful in the next section, but for completeness\nis defined here.\\vOpt_{t}'(\\mRat_{t}) = \\DiscFac \\vEnd_{t}'(\\aRat_{t}) = \\utilFunc'(\\cRat_{t})","type":"content","url":"/method#the-consumption-saving-subproblem","position":11},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The labor-leisure subproblem"},"type":"lvl2","url":"/method#the-labor-leisure-subproblem","position":12},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"The labor-leisure subproblem"},"content":"The labor-leisure subproblem can be restated more compactly as:\\vFunc_{t}(\\bRat_{t}, \\tShkEmp_{t}) = \\max_{ \\leisure_{t}}\n\\h(\\leisure_{t}) + \\vOpt_{t}(\\bRat_{t} +\n\\tShkEmp_{t}(1-\\leisure_{t}))\n\nThe first-order condition with respect to leisure implies the labor-leisure Euler equation\\h'(\\leisure_{t}) = \\vOpt_{t}'(\\mRat_{t}) \\tShkEmp_{t}\n\nThe marginal utility of leisure and its inverse are\\h'(\\leisure) = \\labShare\\leisure^{-\\leiShare} \\qquad\n\\h'^{-1}(\\xRat) = (\\xRat/\\labShare)^{-1/\\leiShare}\n\nUsing an exogenous grid of \\mMat and \\tShkMat, we can find leisure as\\zEndFunc_{t}(\\mMat, \\tShkMat) = \\h'^{-1}\\left(\n\\vOpt_{t}'(\\mMat) \\tShkMat \\right)\n\nIn this case, it’s important to note that there are conditions for leisure itself. An agent with a small level of market\nresources \\mRat_{t} might want to work more than their available time endowment, especially at higher levels of income\n\\tShkEmp_{t}, if the utility of leisure is not enough to compensate for their low wealth. In these situations, the\noptimal unconstrained leisure might be negative, so we must impose a constraint on the optimal leisure function. This is\nsimilar to the treatment of an artificial borrowing constraint in the pure consumption subproblem. From now on, let’s\ncall this constrained optimal function \\hat{\\zEndFunc}_{t}(\\mMat, \\tShkMat), where\\hat{\\zEndFunc}_{t}(\\mMat, \\tShkMat) = \\max \\left[ \\min \\left[ \\zEndFunc_{t}(\\mMat, \\tShkMat), 1 \\right], 0 \\right]\n\nThen, we derive labor as \\lEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}) = 1 -\n\\hat{\\zEndFunc}_{t}(\\mRat_{t}, \\tShkEmp_{t}). Finally, for each\n\\tShkEmp_{t} and\n\\mRat_{t} as an exogenous grid, we can find the endogenous grid of bank\nbalances as \\bEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}) = \\mRat_{t} -\n\\tShkEmp_{t}\\lEndFunc_{t}(\\mRat_{t}, \\tShkEmp_{t}).\n\nThe envelope condition then provides a heterogeneous Frisch elasticity of labor as simply\\vFunc_{t}^{b}(\\bRat_{t}, \\tShkEmp_{t}) = \\vOpt_{t}'(\\mRat_{t}) =\n\\h'(\\leisure_{t})/\\tShkEmp_{t}.","type":"content","url":"/method#the-labor-leisure-subproblem","position":13},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Curvilinear Grids"},"type":"lvl2","url":"/method#curvilinear-grids","position":14},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Curvilinear Grids"},"content":"Although EGMn seems to be a simple approach, there is one important caveat that we have not discussed, which is the\ndetails of the interpolation. In the pure consumption-savings problem, a one-dimensional exogenous grid of post-decision\nliquid assets \\aMat results in a one-dimensional endogenous grid of total market resources \\mMat. However, as we\nknow from standard EGM, the spacing in the \\mMat grid is different from the spacing in the \\aMat grid as the\ninverted Euler equation is non-linear. This is no problem in a one-dimensional problem as we can simply use non-uniform\nlinear interpolation.\n\nHowever, the same is true of higher dimensional problems, where the exogenous grid gets mapped to a warped endogenous\ngrid. In this case, it is not possible to use standard multi-linear interpolation, as the resulting endogenous grid is\nnot rectilinear. Instead, I introduce a novel approach to interpolation that I call Warped Grid Interpolation (WGI),\nwhich is similar to \n\nWhite (2015)’s approach but computationally more efficient and robust. The details of this\ninterpolation method will be further explained in \n\nSection %s, but for now, we show the resulting warped\nendogenous grid for the labor-leisure problem.TODO: Add figure","type":"content","url":"/method#curvilinear-grids","position":15},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Alternative Parametrization"},"type":"lvl2","url":"/method#alternative-parametrization","position":16},{"hierarchy":{"lvl1":"The Sequential Endogenous Grid Method","lvl2":"Alternative Parametrization"},"content":"An alternative formulation for the utility of leisure is to state it in terms\nof the disutility of labor as in (references)\\h(\\labor) = - \\leiShare \\frac{\\labor^{1+\\labShare}}{1+\\labShare}\n\nIn this case, we can restate the problem as\\h(\\leisure) = - \\leiShare\n\\frac{(1-\\leisure)^{1+\\labShare}}{1+\\labShare}\n\nThe marginal utility of leisure and its inverse are\\h'(\\leisure) = \\leiShare(1-\\leisure)^{\\labShare} \\qquad\n\\h'^{-1}(\\xRat) = 1 - (\\xRat/\\leiShare)^{1/\\labShare}\n\nAs in \n\nCarroll (2009), where the utility of normalized consumption and leisure is defined as","type":"content","url":"/method#alternative-parametrization","position":17},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions"},"type":"lvl1","url":"/multdim","position":0},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions"},"content":"The problem in \n\nSection %s demonstrates the simplicity of solving problems sequentially. However, as\nconstructed, the problem has only one state variable and one post-decision state variable per stage. Can EGMn be used\nto solve higher dimensional problems? In short, yes, but it requires additional thought on interpolation.","type":"content","url":"/multdim","position":1},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"A more complex problem"},"type":"lvl2","url":"/multdim#a-more-complex-problem","position":2},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"A more complex problem"},"content":"For a demonstration, we now turn to the problem of a worker saving up for retirement. This worker must consume, save,\nand deposit resources into a tax-advantaged account that can not be liquidated until retirement. In the recursive\nproblem, the worker begins a new period with a liquid account of market resources \\mRat_{t} and an illiquid account of\nretirement savings \\nRat_{t}. The worker maximizes their utility by choosing consumption \\cRat_{t} and pension\ndeposit \\dRat_{t}. The pension deposit is set aside on a retirement account that is exposed to a risky return, while\ntheir post-consumption liquid assets accrue risk-free interest every period. The worker additionally receives an income\nthat faces a permanent (\\PGro_{t+1}) and a transitory (\\tShkEmp_{t+1}) shock every period. At the age of 65, the\nworker is retired and their assets are liquidated, at which point the state reduces to one liquid account of market\nresources. The worker’s recursive problem is:\\begin{split}\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) & = \\max_{\\cRat_{t}, \\dRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\Ex_{t}\n\\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n& \\text{s.t.} \\quad \\cRat_{t} \\ge 0, \\quad \\dRat_{t} \\ge 0 \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n\\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + g(\\dRat_{t}) \\\\\n\\mRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\bRat_{t} \\Risky_{t+1} / / \\PGro_{t+1}\n\\end{split}\n\nwhere\\gFunc(\\dRat) = \\xFer \\log(1+\\dRat).\n\nThis problem can subsequently be broken down into 3 stages: a pension deposit stage, a consumption stage, and an income\nshock stage.","type":"content","url":"/multdim#a-more-complex-problem","position":3},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"Breaking down the problem"},"type":"lvl2","url":"/multdim#breaking-down-the-problem","position":4},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"Breaking down the problem"},"content":"In the deposit stage, the worker begins with market resources and a retirement savings account. The worker must maximize\ntheir value of liquid wealth \\lRat_{t} and retirement balance \\bRat_{t} by choosing a pension deposit \\dRat_{t},\nwhich must be positive. The retirement balance \\bRat is the cash value of their retirement account plus their pension\ndeposit and an additional amount g(\\dRat_{t}) that provides an incentive to save for retirement. As we’ll see, this\nadditional term will allow us to use the Endogenous Grid Method to solve this subproblem.\\begin{split}\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) & = \\max_{\\dRat_{t}} \\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) \\\\\n& \\text{s.t.} \\quad \\dRat_{t} \\ge 0 \\\\\n\\lRat_{t} & = \\mRat_{t} - \\dRat_{t} \\\\\n\\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + g(\\dRat_{t})\n\\end{split}\n\nAfter making their pension decision, the worker begins their consumption stage with liquid wealth \\lRat_{t} and\nretirement balance \\bRat_{t}. From their liquid wealth, the worker must choose a level of consumption to maximize\nutility and continuation value \\wFunc_{t}. After consumption, the worker is left with post-decision states that\nrepresent liquid assets \\aRat_{t} and retirement balance \\bRat_{t}, which passes through this problem unaffected\nbecause it can’t be liquidated until retirement.\\begin{split}\n\\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) + \\DiscFac \\wFunc_{t}(\\aRat_{t}, \\bRat_{t})  \\\\\n& \\text{s.t.} \\quad \\cRat_{t} \\ge 0 \\\\\n\\aRat_{t} & = \\lRat_{t} - \\cRat_{t}\n\\end{split}\n\nFinally, the post-decision value function \\wFunc_{t} represents the value of both liquid and illiquid account balances\nbefore the realization of uncertainty regarding the risky return and income shocks. Since we are dealing with a\nnormalized problem, this stage handles the normalization of state variables and value functions into the next period.\\begin{split}\n\\wFunc_{t}(\\aRat_{t}, \\bRat_{t}) & = \\Ex_{t}\n\\left[ \\PGro_{t+1}^{1-\\CRRA} \\vFunc_{t+1}(\\mRat_{t+1}, \\mRat_{t+1}) \\right] \\\\\n& \\text{s.t.} \\quad \\aRat_{t} \\ge 0, \\quad \\bRat_{t} \\ge 0 \\\\\n\\mRat_{t+1} & = \\aRat_{t} \\Rfree / \\PGro_{t+1} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\bRat_{t} \\Risky_{t+1} / \\PGro_{t+1}\n\\end{split}\n\nThe advantage of conceptualizing this subproblem as a separate stage is that we can construct a function \\wFunc_{t}\nand use it in the prior optimization problems without having to worry about stochastic optimization and taking\nexpectations repeatedly.","type":"content","url":"/multdim#breaking-down-the-problem","position":5},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"The consumption-saving problem"},"type":"lvl2","url":"/multdim#the-consumption-saving-problem","position":6},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"The consumption-saving problem"},"content":"As seen in the consumption stage above, the retirement balance \\bRat_{t} passes through the problem unaffected because\nit can’t be liquidated until retirement. In this sense, it is already a post-decision state variable. To solve this\nproblem, we can use a fixed grid of \\bRat_{t} and for each obtain endogenous consumption and ex-ante market resources\nusing the simple Endogenous Grid Method for the consumption problem.","type":"content","url":"/multdim#the-consumption-saving-problem","position":7},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"The pension deposit problem"},"type":"lvl2","url":"/multdim#the-pension-deposit-problem","position":8},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"The pension deposit problem"},"content":"In the deposit stage, both the state variables and post-decision variables are different since both are affected by the\npension deposit decision.\n\nFirst, we can rewrite the pension deposit problem more compactly:\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}) = \\max_{\\dRat_{t}}\n\\vOpt_{t}(\\mRat_{t} - \\dRat_{t}, \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}))\n\nThe first-order condition is\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t})(-1) +\n\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})(1+\\gFunc'(\\dRat_{t})) = 0.\n\nRearranging this equation gives\\gFunc'(\\dRat_{t}) = \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n\\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})} - 1\n\nwhere\\gFunc'(\\dRat) =\n\\frac{\\xFer}{1+\\dRat} \\qquad \\gFunc'^{-1}(y) = \\xFer/y - 1\n\nGiven that \\gFunc'(\\dRat) exists and is invertible, we can find\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\gFunc'^{-1}\\left(\n\\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n\\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t},\n\\bRat_{t})} - 1 \\right)\n\nUsing this, we can back out \\nRat_{t} as\\nEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\bRat_{t} -\n\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) - \\gFunc(\\dEndFunc_{t}(\\lRat_{t},\n\\bRat_{t}))\n\nand \\mRat_{t} as\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\lRat_{t} +\n\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\n\nIn sum, given an exogenous grid (\\lRat_{t}, \\bRat_{t}) we obtain the triple\n\\left(\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}), \\nEndFunc_{t}(\\lRat_{t},\n\\bRat_{t}), \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\\right), which\nwe can use to\ncreate an interpolator for the decision rule \\dRat_{t}.\n\nTo close the solution method, the envelope conditions are\\begin{split}\n\\vFunc_{t}^{\\mRat}(\\mRat_{t}, \\nRat_{t}) & =\n\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) \\\\\n\\vFunc_{t}^{\\nRat}(\\mRat_{t}, \\nRat_{t}) & =\n\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})\n\\end{split}","type":"content","url":"/multdim#the-pension-deposit-problem","position":9},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"Unstructured Grid Interpolation"},"type":"lvl2","url":"/multdim#unstructured-grid-interpolation","position":10},{"hierarchy":{"lvl1":"The EGM^n in Higher Dimensions","lvl2":"Unstructured Grid Interpolation"},"content":"\n\nFigure 3.1:A regular, rectilinear exogenous grid of pension balances after deposit \\bRat_{t} and liquid assets after consumption \\lRat_{t}.\n\nAs in \n\nSection %s, the resulting endogenous grid is not rectilinear, and in this more complex problem it is\nnot even a regular grid. We can see in  \n\nFigure 3.1 that starting from a regular and rectilinear exogenous\ngrid of liquid assets post-consumption \\lRat_{t} and pension balances post-deposit \\bRat_{t}, we\nobtain \n\nFigure 3.2 which shows an irregular and unstructured endogenous grid of market resources \\mRat_{t}\nand pension balances pre-deposit \\nRat_{t}.\n\n\n\nFigure 3.2:An irregular, unstructured endogenous grid of market resources \\mRat_{t} and pension balances before deposit \\nRat_{t}.\n\nTo interpolate a function defined on an unstructured grid, we use Gaussian Process Regression as in {cite:\nt}Scheidegger2019.","type":"content","url":"/multdim#unstructured-grid-interpolation","position":11},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids"},"type":"lvl1","url":"/multinterp","position":0},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids"},"content":"This section presents alternative interpolation methods for non-rectilinear grids. First, I present the relatively\nsimple case of fast warped interpolation on a curvilinear grid, which improves upon the interpolation in {cite:\nt}White2015. Then, I present a machine learning approach to interpolation on unstructured grids based on Gaussian\nProcess Regression as presented in \n\nScheidegger & Bilionis (2019).","type":"content","url":"/multinterp","position":1},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl2":"Warped Grid Interpolation (WGI)"},"type":"lvl2","url":"/multinterp#warped-grid-interpolation-wgi","position":2},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl2":"Warped Grid Interpolation (WGI)"},"content":"Assume we have a set of points indexed by (i,j) in two-dimensional space for which we have corresponding functional\nvalues in a third dimension, such that f(x_{ij},y_{ij}) = z_{ij}. In practice, we are interested in cases where the\nz_{ij} are difficult to compute and f(x_{ij},y_{ij}) is unknown, so we are unable to compute them at other values of\nx and y --- which is why we want to interpolate. These (x_{ij},y_{ij}) points however are not evenly spaced\nand do not form a rectilinear grid which would make it easy to interpolate the function off the grid. Nevertheless,\nthese points do have a regular structure as we will see.\n\n\n\nFigure 4.1:True function and curvilinear grid of points for which we know the value of the function.\n\nIn \n\nFigure 4.1, we can see the true function in three-dimensional space, along with the points for\nwhich we actually know the value of the function. The underlying regular structure comes from the points’ position in\nthe matrix, the (i,j) coordinates. If we join the points along every row and every column, we can see that the\nresulting grid is regular and piecewise affine (curvilinear).\n\nIn \n\nFigure 4.2 we see the values of the function at their index coordinate points in the matrix. We can\nsee that there exists a mapping between the curvilinear grid and the index coordinates of the matrix.\n\n\n\nFigure 4.2:Homotopy between the curvilinear grid and the index coordinates of the matrix.\n\nThe objective is to be able to interpolate the value of the function at any point off the grid, where presumably we are\nonly interested in points internal to the curvilinear space and not outside the boundaries. For example, we can imagine\nthat we want an approximation to the function at the point (x,y) = (3, 5) pictured \n\nFigure 4.3. If we\ncould find the corresponding point in the coordinate grid, interpolation would be straightforward. We can find where the\nx-coordinate of the point of interest intersects with the index-coordinates of the matrix. This is similar to assuming\nthat we have 3 linear interpolators formed by connecting the points on the green lines in the x-direction, and for each\ninterpolator we can approximate the corresponding y and z values using the grid data. Now, for each circle\nin \n\nFigure 4.3, we have a corresponding pair (y,z), and we can interpolate in the y-direction to find\nthe corresponding z-value for the point’s y-coordinate.\n\n\n\nFigure 4.3:The method consist of extending the loci of points in the x dimension to find the corresponding crossing points in the y dimension.","type":"content","url":"/multinterp#warped-grid-interpolation-wgi","position":3},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl2":"Unstructured Grids"},"type":"lvl2","url":"/multinterp#unstructured-grids","position":4},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl2":"Unstructured Grids"},"content":"Unstructured interpolation arises in many dynamic programming applications when using the Endogenous Grid Method because\nthe first-order conditions might be highly non-linear and non-monotonic, or because boundary constraints induce kinks in\nthe policy and value functions. In these cases, the grid points generated by the EGM step are not evenly spaced, leading\nto the need for curvilinear interpolation. We saw in the previous subsection an approach to curvilinear interpolation\nbased on \n\nWhite (2015) that is incapable of interpolation on structured grids. A similar approach was presented in\n\n\nLudwig & Schön (2018) which used Delaunay interpolation. However, this approach is not well suited for our purposes\nbecause triangulation can be computationally intensive and slow, often offsetting the efficiency gains from the\nEndogenous Grid Method.\n\nAs an alternative to these methods, I introduce the use of Gaussian Process Regression (GPR) along with the Endogenous\nGrid Method. GPR is computationally efficient, and tools exist to easily parallelize and take advantage of hardware such\nas Graphics Processing Units (GPU).note: spell out GPU maybe or explain it in some way?","type":"content","url":"/multinterp#unstructured-grids","position":5},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl3":"Gaussian Process Regression","lvl2":"Unstructured Grids"},"type":"lvl3","url":"/multinterp#gaussian-process-regression","position":6},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl3":"Gaussian Process Regression","lvl2":"Unstructured Grids"},"content":"A Gaussian Process is an infinite dimensional random process for which every subset of random variables is jointly\nGaussian or has a multivariate normal distribution.\\begin{gathered}\n\\mathbf{X} \\sim \\mathcal{N}(\\mathbf{\\mu}, \\mathbf{\\Sigma}) \\quad \\text{s.t.} \\quad x_i \\sim \\mathcal{N}(\\mu_i, \\sigma_\n{ii}) \\\\\n\\text{and} \\quad \\sigma_{ij} = \\Ex[(x_i - \\mu_i)(x_j - \\mu_j)] \\quad \\forall i,j \\in \\{1, \\ldots, n\\}.\n\\end{gathered}\n\nwhere\\mathbf{X} = \\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n\\quad\n\\mathbf{\\mu} = \\begin{bmatrix}\n\\mu_1 \\\\\n\\mu_2 \\\\\n\\vdots \\\\\n\\mu_n\n\\end{bmatrix}\n\\quad\n\\mathbf{\\Sigma} = \\begin{bmatrix}\n\\sigma_{11} & \\sigma_{12} & \\cdots & \\sigma_{1n} \\\\\n\\sigma_{21} & \\sigma_{22} & \\cdots & \\sigma_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n\\sigma_{n1} & \\sigma_{n2} & \\cdots & \\sigma_{nn}\n\\end{bmatrix}.\n\nBeing infinitely dimensional, a Gaussian Process can be used to represent a probability distribution over the space of\nfunctions in n dimensions. Thus, a Gaussian Process Regression is used to find the best fit function to a set of data\npoints.\\mathbb{P}(\\mathbf{f} | \\mathbf{X}) = \\mathcal{N}(\\mathbf{f} | \\mathbf{m}, \\mathbf{K})\n\nwhere \\mathbf{f} is the vector of function values at the points \\mathbf{X}, \\mathbf{m} is the mean of the\nfunction, and \\mathbf{K} is a kernel function that describes the covariance between the function values at different\npoints.\n\nA standard kernel function is the squared exponential kernel, or the radial basis function kernel, which is defined ask(\\mathbf{x}_i, \\mathbf{x}_j) = \\sigma^2_f \\exp\\left(-\\frac{1}{2l^2} (\\mathbf{x}_i - \\mathbf{x}_j)' (\\mathbf{x}_i -\n\\mathbf{x}_j)\\right).\n\nUsing GPR to interpolate a function f, we can both predict the value of the function at a point \\mathbf{x}_* and the\nuncertainty in the prediction, which provides useful information as to the accuracy of the approximation.","type":"content","url":"/multinterp#gaussian-process-regression","position":7},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl3":"An example of the GPR","lvl2":"Unstructured Grids"},"type":"lvl3","url":"/multinterp#an-example-of-the-gpr","position":8},{"hierarchy":{"lvl1":"Multivariate Interpolation on Non-Rectilinear Grids","lvl3":"An example of the GPR","lvl2":"Unstructured Grids"},"content":"In \n\nFigure 4.4, we see the function we are trying to approximate along with a sample of data points\nfor which we know the value of the function. In practice, the value of the function is unknown and/or expensive to\ncompute, so we must use a limited amount of data to approximate it.\n\n\n\nFigure 4.4:The true function that we are trying to approximate and a sample of data points.\n\nAs we discussed, a Gaussian Process is an infinite dimensional random process which can be used to represent a\nprobability of distributions over the space of functions. In \n\nFigure 4.5, we see a random sample of\nfunctions from the GPR posterior, which is a Gaussian Process conditioned on fitting the data. From this small sample of\nfunctions, we can see that the GP generates functions that fit the data well, and the goal of GPR is to find the one\nfunction that best fits the data given some hyperparameters by minimizing the negative log-likelihood of the data.\n\n\n\nFigure 4.5:A random sample of functions from the GPR posterior that fit the data. The goal of GPR is to find the function that best fits the data.\n\nIn \n\nFigure 4.6, we see the result of GPR with a particular parametrization of the kernel function. The\ndotted line shows the true function, while the blue dots show the known data points. GPR provides the mean function\nwhich best fits the data, represented in the figure as an orange line. The shaded region represents a 95% confidence\ninterval, which is the uncertainty of the predicted function. Along with finding the best fit of the function, GPR\nprovides the uncertainty of the prediction, which is useful information as to the accuracy of the approximation.\n\n\n\nFigure 4.6:GPR finds the function that best fits the data given some hyperparameters. GPR then optimizes over the parameter space to find the function that minimizes the negative log-likelihood of the data.\n\nFor this illustration, we generate z’s arbitrarily using the function f(x,y) = (xy)^{1/4}.\n\nFor more examples of the Warped Grid Interpolation method in action, see the github\nproject \n\nalanlujan91/multinterp.\n\nGardner et al. (2018)\n\nFor details see notebook.","type":"content","url":"/multinterp#an-example-of-the-gpr","position":9},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method"},"type":"lvl1","url":"/conditions","position":0},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method"},"content":"","type":"content","url":"/conditions","position":1},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl2":"Splitting the problem into subproblems"},"type":"lvl2","url":"/conditions#splitting-the-problem-into-subproblems","position":2},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl2":"Splitting the problem into subproblems"},"content":"The first step in using the Sequential Endogenous Grid Method is to split the problem into subproblems. This process of\nsplitting up the problem has to be strategic to not insert additional complexity into the original problem. If one is\nnot careful when doing this, the subproblems can become more complex and intractable than the original problem.Comment: Need to decide if it is subproblem or subproblem # DONE\n\nTo split up the problem, we first count the number of control variables or decisions faced by the agent. Ideally, if the\nagent has n control variables, then the problem should be split into n subproblems, each handling a different\ncontrol variable. For counting the number of control variables, it is important to not double count variables which are\nequivalent and have market clearing conditions. For example, the decision of how much to consume and how much to save\nmay seem like two different choices, but because of the market clearing condition \\cRat + \\aRat = \\mRat they are\nresolved simultaneously and count as only one decision variable. Similarly, the\nchoice between labor and leisure are simultaneous and count as only one decision.\n\nHaving counted our control variables, we look for differentiable and invertible utility functions which are separable in\nthe dynamic programming problem, such as in \n\nSection %s of the paper, or differentiable and invertible\nfunctions in the transition, as in \n\nSection %s of the paper.note: Capitalize Section for all instances # DONE","type":"content","url":"/conditions#splitting-the-problem-into-subproblems","position":3},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Separable utility functions","lvl2":"Splitting the problem into subproblems"},"type":"lvl3","url":"/conditions#separable-utility-functions","position":4},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Separable utility functions","lvl2":"Splitting the problem into subproblems"},"content":"In \n\nSection %s, we have additively separable utility of consumption and leisure, which allows for each of\nthese control variables to be handled by separate subproblems. So, it makes sense to split the utility between\nsubproblems and attach one to the consumption subproblem and one to the leisure subproblem.\n\nAs mentioned in that section, however, there are only two separable utility functions in the problem which have been\nassigned to two subproblems already. This leaves one control variable without a separable utility function. In that\ncase, there is not another Endogenous Grid Method step to exploit, and this subproblem has to be handled by standard\nconvex optimization techniques such as maximization of the value function (VFI) or finding the root of the Euler\nequation (PFI).note: spell out small numbers except for when talking about a [Section %s](#multdim) etc\n\nNow that we have split the problem into conceptual subproblems, it is important to sequence them in such a way that they\ndon’t become more complex than the original problem. The key here is to avoid adding unnecessary state variables. For\nexample, in the consumption-leisure-portfolio problem, if we were to choose consumption first, we would have to track\nthe wage rate into the following leisure subproblem. This would mean that our consumption problem would be\ntwo-dimensional as well as our labor decision problem. As presented, the choice of order in \n\nSection %s\nensures that the consumption problem is one-dimensional, as we can shed the information about the wage rate offer after\nthe agent has made their labor-leisure decision. If we did this the other way, the problem would be more complex and\nrequire additional computational resources.\n\nThe consumption subproblem would be two-dimensional instead of one-dimensional, adding more complexity,\\begin{split}\n\\vFunc(\\bRat, \\tShkEmp) & = \\max_{\\cRat} \\uFunc(\\cRat) + \\vOpt(\\bRat', \\tShkEmp) \\\\\n& \\text{s.t.}\\\\\n\\bRat' & = \\bRat - \\cRat \\ge - \\tShkEmp\n\\end{split}\n\nwhile the labor-leisure subproblem would have an additional constraint\\begin{split}\n\\vOpt(\\bRat', \\tShkEmp) & = \\max_{\\leisure} \\h(\\leisure) + \\vEnd(\\aRat) \\\\\n& \\text{s.t.} \\\\\n0 & \\le \\leisure \\le 1 \\\\\n\\aRat & = \\bRat' + \\tShkEmp(1 - \\leisure) \\ge 0.\n\\end{split}\n\nTherefore, strategic ordering of subproblems can greatly simplify the solution process and reduce computational the\nburden.","type":"content","url":"/conditions#separable-utility-functions","position":5},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Differentiable and invertible transition","lvl2":"Splitting the problem into subproblems"},"type":"lvl3","url":"/conditions#differentiable-and-invertible-transition","position":6},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Differentiable and invertible transition","lvl2":"Splitting the problem into subproblems"},"content":"In \n\nSection %s, we see that a problem with a differentiable and invertible transition can also be used to\nembed an additional Endogenous Grid Method step. Because the transition applies independently to a state variable that\nis not related to the other control variable, consumption, it can be handled separately from the consumption subproblem.note to check the tense of the entire text\n\nIn this particular problem, however, it turns out to make no difference how we order the two subproblems. This is\nbecause the control variables, consumption and pension deposit, each affect a separate resource account, namely market\nresources and pension balance. Because of this, the two subproblems are independent of each other and can be solved in\nany order.\n\nA good rule of thumb is that when splitting up a problem into subproblems, we should try to reduce the information set\nthat is passed onto the next subproblem. In \n\nSection %s, choosing leisure-labor and realizing total market\nresources before consumption allows us to shed the wage rate offer state variable before the consumption problem, and we\nknow that for the portfolio choice we only need to know liquid assets after expenditures (consumption). Thus, the order\nmakes intuitive sense; agent first chooses leisure-labor, realizing total market resources, then chooses consumption and\nsavings, and finally chooses their risky portfolio choice. In \n\nSection %s, there are two expenditures that\nare independent of each other, consumption and deposit, and making one decision or the other first does not reduce the\ninformation set for the agent, thus the order of these subproblems does not matter.","type":"content","url":"/conditions#differentiable-and-invertible-transition","position":7},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl2":"The Endogenous Grid Method for Subproblems"},"type":"lvl2","url":"/conditions#the-endogenous-grid-method-for-subproblems","position":8},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl2":"The Endogenous Grid Method for Subproblems"},"content":"Once we have strategically split the problem into subproblems, we can use the Endogenous Grid Method in each applicable\nsubproblem while iterating backwards from the terminal period. As we discussed in Sections \n\nSection %s\nand \n\nSection %s, the EGM step can be applied when there is a separable, differentiable and invertible utility\nfunction in the subproblem or when there is a differentiable and invertible transition in the subproblem. We will\ndiscuss each of these cases in turn.","type":"content","url":"/conditions#the-endogenous-grid-method-for-subproblems","position":9},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Utility function","lvl2":"The Endogenous Grid Method for Subproblems"},"type":"lvl3","url":"/conditions#utility-function","position":10},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Utility function","lvl2":"The Endogenous Grid Method for Subproblems"},"content":"A generic subproblem with a differentiable and invertible utility function can be characterized as follows:\\begin{split}\n\\VFunc(\\xRat) & = \\max_{\\yRat \\in \\PGro(\\xRat)} \\UFunc(\\xRat, \\yRat) + \\DiscFac \\WFunc(\\aRat) \\\\\n& \\text{s.t.} \\\\\n\\aRat & = \\TFunc(\\xRat,\\yRat)\n\\end{split}\n\nFor an interior solution, the first-order condition is thus\\UFunc'_{\\yRat}(\\xRat, \\yRat) + \\DiscFac \\WFunc'(\\aRat)\\TFunc'_{\\yRat}(\\xRat,\\yRat) = 0\n\nIf, as we assumed, the utility function is differentiable and invertible, then the Endogenous Grid Method consists of\\yRat = \\left(\\UFunc'_{\\yRat}(\\xRat, \\yRat)\\right)^{-1}\n\\left[ -\\DiscFac \\WFunc'(\\aRat)\\TFunc'_{\\yRat}(\\xRat,\\yRat)\\right]\n\nBy using an exogenous grid of the post-decision state \\aRat, we can solve for the optimal decision rule \\yRat at\neach point on the grid. This is the Endogenous Grid Method step.","type":"content","url":"/conditions#utility-function","position":11},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Transition","lvl2":"The Endogenous Grid Method for Subproblems"},"type":"lvl3","url":"/conditions#transition","position":12},{"hierarchy":{"lvl1":"Conditions for using the Sequential Endogenous Grid Method","lvl3":"Transition","lvl2":"The Endogenous Grid Method for Subproblems"},"content":"If the generic subproblem has no utility, but instead has a differentiable and invertible transition, then the\nEndogenous Grid Method can still be used.\\begin{split}\n\\VFunc(\\xRat) & = \\max_{\\yRat \\in \\PGro(\\xRat)} \\WFunc(\\aRat) \\\\\n& \\text{s.t.} \\\\\n\\aRat & = \\TFunc(\\xRat,\\yRat)\n\\end{split}\n\nHere, the first-order condition is\\WFunc'(\\aRat)\\TFunc'_{\\yRat}(\\xRat,\\yRat)  = 0\n\nand the Endogenous Grid Method step is\\yRat = \\left(\\TFunc'_{\\yRat}(\\xRat,\\yRat)\\right)^{-1} \\left[ 1 / \\WFunc'(\\aRat)\\right]","type":"content","url":"/conditions#transition","position":13},{"hierarchy":{"lvl1":"Conclusion"},"type":"lvl1","url":"/conclusion","position":0},{"hierarchy":{"lvl1":"Conclusion"},"content":"Summarize the method: Begin your conclusion by summarizing the new computational method you developed or proposed.\n\nProvide a brief overview of the key features of the method and how it differs from existing methods.\n\nThis paper introduces a novel method for solving dynamic stochastic optimization problems called the Sequential\nEndogenous Grid Method (EGMn). Given a problem with multiple decisions (or control variables), the Sequential\nEndogenous Grid Method proposes separating the problem into a sequence of smaller subproblems that can be solved\nsequentially by using more than one EGM step. Then, depending on the resulting endogenous grid from each subproblem,\nthis paper proposes different methods for interpolating functions on non-rectilinear grids, called the Warped Grid\nInterpolation (WGI) and the Gaussian Process Regression (GPR) method.\n\nEGMn is similar to the Nested Endogenous Grid Method (NEGM) and the Generalized Endogenous Grid Method (\nG2EGM) in that it can solve problems with multiple decisions, but it differs from these methods in that by\nchoosing the subproblems strategically, we can take advantage of multiple sequential EGM steps to solve complex\nmultidimensional models in a fast and efficient manner. Additionally, the use of machine learning tools such as the GPR\novercomes bottlenecks seen in unstructured interpolation using Delauany triangulation and other similar methods.Evaluate the method: Evaluate the strengths and limitations of the new computational method you developed or proposed.\n\nDiscuss how the method compares to existing methods in terms of accuracy, efficiency, and ease of use.Demonstrate the method: If possible, provide an example of how the new computational method can be used to solve a\n\nproblem or answer a research question. This will help the reader understand the practical implications of the method.Highlight potential applications: Discuss potential applications of the new computational method. This will help\n\ndemonstrate the broader impact of the method beyond the specific problem or research question addressed in your paper.Discuss future directions: Provide suggestions for future research based on the new computational method you developed\n\nor proposed. This can include improvements to the method, potential extensions to other areas of research, or new\napplications of the method.Conclude with final thoughts: End your conclusion with some final thoughts that tie together the main points of your\n\npaper. This will help leave a lasting impression on the reader.\n\nDruedahl (2021).\n\nDruedahl & Jørgensen (2017).","type":"content","url":"/conclusion","position":1},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n"},"type":"lvl1","url":"/appendix","position":0},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n"},"content":"","type":"content","url":"/appendix","position":1},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The problem for a retired household"},"type":"lvl2","url":"/appendix#the-problem-for-a-retired-household","position":2},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The problem for a retired household"},"content":"I designate as \\wFunc_{t}(\\mRat_{t}) the problem of a retired household at time t with total resources \\mRat. The\nretired household solves a simple consumption-savings problem with no income uncertainty and a certain next period\npension of \\underline{\\tShkEmp}.\\begin{split}\n\\wFunc_{t}(\\mRat_{t}) & = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) +\n\\DiscFac \\wFunc_{t+1}(\\mRat_{t}) \\\\\n& \\text{s.t.} \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t} \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} +\n\\underline{\\tShkEmp}\n\\end{split}\n\nNotice that there is no uncertainty and the household receives a retirement\nincome \\underline{\\tShkEmp} every period until death.","type":"content","url":"/appendix#the-problem-for-a-retired-household","position":3},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The problem for a worker household"},"type":"lvl2","url":"/appendix#the-problem-for-a-worker-household","position":4},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The problem for a worker household"},"content":"The value function of a worker household is\\VFunc_{t}(\\mRat_{t}, \\nRat_{t}) = \\Ex_\\error \\max \\left\\{\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) + \\sigma_{\\error}\n\\error_{\\Work} ,\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Retire) + \\sigma_{\\error}\n\\error_{\\Retire} \\right\\}\n\nwhere the choice specific problem for a working household that decides to\ncontinue working is\\begin{split}\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\cRat_{t},\n\\dRat_{t}} \\util(\\cRat_{t}) - \\kapShare + \\DiscFac\n\\Ex_{t} \\left[\n\\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1})\n\\right] \\\\\n& \\text{s.t.} \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n\\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}) \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n\\end{split}\n\nand the choice specific problem for a working household that decides to retire\nis\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Retire) =\n\\wFunc_{t}(\\mRat_{t}+\\nRat_{t})","type":"content","url":"/appendix#the-problem-for-a-worker-household","position":5},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Applying the Sequential EGM"},"type":"lvl2","url":"/appendix#applying-the-sequential-egm","position":6},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Applying the Sequential EGM"},"content":"The first step is to define a post-decision value function. Once the household\ndecides their level of consumption and pension deposits, they are left with\nliquid assets they are saving for the future and illiquid assets in their\npension account which they can’t access again until retirement. The\npost-decision value function can be defined as\\begin{split}\n\\vEnd_{t}(\\aRat_{t}, \\bRat_{t}) & = \\DiscFac\n\\Ex_{t} \\left[ \\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n& \\text{s.t.} \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n\\end{split}\n\nThen redefine the working agent’s problem as\\begin{split}\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\cRat_{t},\n\\dRat_{t}} \\util(\\cRat_{t})  - \\kapShare + \\vEnd_{t}(\\aRat_{t},\n\\bRat_{t}) \\\\\n\\aRat_{t} & = \\mRat_{t} - \\cRat_{t} - \\dRat_{t} \\\\\n\\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}) \\\\\n\\end{split}\n\nClearly, the structure of the problem remains the same, and this is the problem\nthat G2EGM solves. We’ve only moved some\nof the stochastic mechanics out of the problem. Now, we can apply the\nsequential EGMn method. Let the agent first decide \\dRat_{t}, the deposit\namount into their retirement; we will call this the deposit problem, or outer loop. Thereafter, the\nagent will have net liquid assets\nof \\lRat_{t} and pension assets of \\bRat_{t}.\\begin{split}\n\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) & = \\max_{\\dRat_{t}}\n\\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) \\\\\n& \\text{s.t.} \\\\\n\\lRat_{t} & = \\mRat_{t} - \\dRat_{t} \\\\\n\\bRat_{t} & = \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t})\n\\end{split}\n\nNow, the agent can move on to picking their consumption and savings; we can call this\nthe pure consumption problem or inner loop.\\begin{split}\n\\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) & = \\max_{\\cRat_{t}}\n\\util(\\cRat_{t}) - \\kapShare + \\vEnd_{t}(\\aRat_{t}, \\bRat_{t}) \\\\\n& \\text{s.t.} \\\\\n\\aRat_{t} & = \\lRat_{t} - \\cRat_{t} \\\\\n\\end{split}\n\nBecause we’ve already made the pension decision, the amount of pension assets\ndoes not change in this loop and it just passes through to the post-decision\nvalue function.","type":"content","url":"/appendix#applying-the-sequential-egm","position":7},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Solving the problem"},"type":"lvl2","url":"/appendix#solving-the-problem","position":8},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Solving the problem"},"content":"","type":"content","url":"/appendix#solving-the-problem","position":9},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl3":"Solving the Inner Consumption Saving Problem","lvl2":"Solving the problem"},"type":"lvl3","url":"/appendix#solving-the-inner-consumption-saving-problem","position":10},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl3":"Solving the Inner Consumption Saving Problem","lvl2":"Solving the problem"},"content":"Let’s start with the pure consumption-saving problem, which we can summarize by\nsubstitution as\\vOpt_{t}(\\lRat_{t}, \\bRat_{t}) = \\max_{\\cRat_{t}} \\util(\\cRat_{t}) - \\kapShare +\n\\vEnd_{t}(\\lRat_{t} - \\cRat_{t}, \\bRat_{t})\n\nThe first-order condition is\\util'(\\cRat_{t}) = \\vEnd_{t}^{\\aRat}(\\lRat_{t}-\\cRat_{t}, \\bRat_{t}) =\n\\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t})\n\nWe can invert this Euler equation as in standard EGM to obtain the consumption\nfunction.\\cEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) =\n\\util'^{-1}\\left(\\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t})\\right)\n\nAgain as before, \\lEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) =\n\\cEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) + \\aRat_{t}. To sum up, using an\nexogenous\ngrid of (\\aRat_{t}, \\bRat_{t}) we obtain the trio (\\cEndFunc_{t}(\\aRat_{t},\n\\bRat_{t}), \\lEndFunc_{t}(\\aRat_{t},\n\\bRat_{t}), \\bRat_{t}) which\nprovides an\ninterpolating function for our optimal consumption decision rule over the\n(\\lRat, \\bRat) grid. Without loss of generality, assume \\lEndFunc_{t} =\n\\lEndFunc_{t}(\\aRat_{t}, \\bRat_{t}) and define the interpolating\nfunction as\\cTarg_{t}(\\lEndFunc_{t}, \\bRat_{t}) \\equiv \\cEndFunc_{t}(\\aRat_{t},\n\\bRat_{t})\n\nFor completeness, we derive the envelope conditions as well, and as we will\nsee, these will be useful when solving the next section.\\begin{split}\n\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) & =\n\\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t}) = \\util'(\\cRat_{t}) \\\\\n\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t}) & =\n\\vEnd_{t}^{\\bRat}(\\aRat_{t}, \\bRat_{t})\n\\end{split}","type":"content","url":"/appendix#solving-the-inner-consumption-saving-problem","position":11},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl3":"Solving the Outer Pension Deposit Problem","lvl2":"Solving the problem"},"type":"lvl3","url":"/appendix#solving-the-outer-pension-deposit-problem","position":12},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl3":"Solving the Outer Pension Deposit Problem","lvl2":"Solving the problem"},"content":"Now, we can move on to solving the deposit problem, which we can also summarize\nas\\vFunc_{t}(\\mRat_{t}, \\nRat_{t}, \\Work) = \\max_{\\dRat_{t}}\n\\vOpt_{t}(\\mRat_{t}\n- \\dRat_{t}, \\nRat_{t} + \\dRat_{t} + \\gFunc(\\dRat_{t}))\n\nThe first-order condition is\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t})(-1) +\n\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})(1+\\gFunc'(\\dRat_{t})) = 0\n\nRearranging this equation gives\\gFunc'(\\dRat_{t}) = \\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n\\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})} - 1\n\nAssuming that \\gFunc'(\\dRat) exists and is invertible, we can find\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\gFunc'^{-1}\\left(\n\\frac{\\vOpt_{t}^{\\lRat}(\\lRat_{t},\n\\bRat_{t})}{\\vOpt_{t}^{\\bRat}(\\lRat_{t},\n\\bRat_{t})} - 1 \\right)\n\nUsing this, we can back out \\nRat_{t} as\\nEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\bRat_{t} -\n\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) - \\gFunc(\\dEndFunc_{t}(\\lRat_{t},\n\\bRat_{t}))\n\nand \\mRat_{t} as\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}) = \\lRat_{t} +\n\\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\n\nIn sum, given an exogenous grid (\\lRat_{t}, \\bRat_{t}) we obtain the triple\n\\left(\\mEndFunc_{t}(\\lRat_{t}, \\bRat_{t}), \\nEndFunc_{t}(\\lRat_{t},\n\\bRat_{t}), \\dEndFunc_{t}(\\lRat_{t}, \\bRat_{t})\\right), which\nwe can use to\ncreate an interpolator for the decision rule \\dRat_{t}.\n\nTo close the solution method, the envelope conditions are\\begin{split}\n\\vFunc_{t}^{\\mRat}(\\mRat_{t}, \\nRat_{t}, \\Work) & =\n\\vOpt_{t}^{\\lRat}(\\lRat_{t}, \\bRat_{t}) \\\\\n\\vFunc_{t}^{\\nRat}(\\mRat_{t}, \\nRat_{t}, \\Work) & =\n\\vOpt_{t}^{\\bRat}(\\lRat_{t}, \\bRat_{t})\n\\end{split}","type":"content","url":"/appendix#solving-the-outer-pension-deposit-problem","position":13},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Is g invertible?"},"type":"lvl2","url":"/appendix#is-g-invertible","position":14},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Is g invertible?"},"content":"We’ve already seen that \\util'(\\cdot) is invertible, but is \\gFunc?\\gFunc(\\dRat) = \\xFer \\log(1+\\dRat) \\qquad \\gFunc'(\\dRat) =\n\\frac{\\xFer}{1+\\dRat} \\qquad \\gFunc'^{-1}(y) = \\xFer/y - 1","type":"content","url":"/appendix#is-g-invertible","position":15},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The Post-Decision Value and Marginal Value Functions"},"type":"lvl2","url":"/appendix#the-post-decision-value-and-marginal-value-functions","position":16},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"The Post-Decision Value and Marginal Value Functions"},"content":"\\begin{split}\n\\vEnd_{t}(\\aRat, \\bRat) & = \\DiscFac \\Ex_{t} \\left[\n\\VFunc(\\mRat_{t+1}, \\nRat_{t+1}) \\right] \\\\\n& \\text{s.t.} \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n\\end{split}\n\nand\\begin{split}\n\\vEnd_{t}^{\\aRat}(\\aRat_{t}, \\bRat_{t}) & = \\DiscFac\n\\Rfree_{\\aRat} \\Ex_{t} \\left[ \\VFunc^{\\mRat}_{t+1}(\\mRat_{t+1},\n\\nRat_{t+1})\n\\right] \\\\\n& \\text{s.t.} \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n\\end{split}\n\nand\\begin{split}\n\\vEnd_{t}^{\\bRat}(\\aRat_{t}, \\bRat_{t}) & = \\DiscFac\n\\Rfree_{\\bRat} \\Ex_{t} \\left[ \\VFunc^{\\nRat}_{t+1}(\\mRat_{t+1},\n\\nRat_{t+1})\n\\right] \\\\\n& \\text{s.t.} \\\\\n\\mRat_{t+1} & = \\Rfree_{\\aRat} \\aRat_{t} + \\tShkEmp_{t+1} \\\\\n\\nRat_{t+1} & = \\Rfree_{\\bRat} \\bRat_{t}\n\\end{split}","type":"content","url":"/appendix#the-post-decision-value-and-marginal-value-functions","position":17},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Taste Shocks"},"type":"lvl2","url":"/appendix#taste-shocks","position":18},{"hierarchy":{"lvl1":"Solving the illustrative G2EGM model with EGM^n","lvl2":"Taste Shocks"},"content":"From discrete choice theory and from DCEGM paper, we know that\\Ex_{t} \\left[\n\\VFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1}, \\error_{t+1}) \\right] =\n\\sigma \\log \\left[ \\sum_{\\Decision \\in \\{\\Work, \\Retire\\}} \\exp \\left(\n\\frac{\\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1},\n\\Decision)}{\\sigma_\\error} \\right)  \\right]\n\nand\\Prob_{t}(\\Decision ~ \\lvert ~ \\mRat_{t+1}, \\nRat_{t+1}) = \\frac{\\exp\n\\left(\n\\vFunc_{t + 1}(\\mRat_{t+1}, \\nRat_{t+1}, \\Decision) /\n\\sigma_\\error\n\\right)\n}{ \\sum\\limits_{\\Decision \\in \\{\\Work, \\Retire\\}} \\exp \\left(\n\\frac{\\vFunc_{t+1}(\\mRat_{t+1}, \\nRat_{t+1},\n\\Decision)}{\\sigma_\\error} \\right)}\n\nthe first-order conditions are therefore\\vOptAlt_{t}^{\\mRat}(\\mRat_{t+1}, \\nRat_{t+1}) = \\sum_{\\Decision \\in\n\\{\\Work, \\Retire\\}} \\Prob_{t}(\\Decision ~\n\\lvert ~\n\\mRat_{t+1}, \\nRat_{t+1}) \\vFunc_{t+1}^{\\mRat}(\\mRat_{t+1},\n\\nRat_{t+1},\n\\Decision)","type":"content","url":"/appendix#taste-shocks","position":19}]}